From accf8d6c0b25573e448eb54c5210ae7a9925cad3 Mon Sep 17 00:00:00 2001
From: wh <wanghang@rock-chips.com>
Date: Tue, 8 Dec 2020 09:47:11 +0800
Subject: [PATCH 18/25] Settings: add hdmi settings function

Signed-off-by: wh <wanghang@rock-chips.com>
Change-Id: Ib1327548cf7fbba01c0291376854f6635b231b90
---
 AndroidManifest.xml                           |  17 +
 res/drawable/ic_screen_scale_down.xml         |   5 +
 res/drawable/ic_screen_scale_down_default.png | Bin 0 -> 4538 bytes
 res/drawable/ic_screen_scale_down_pressed.png | Bin 0 -> 4670 bytes
 res/drawable/ic_screen_scale_left.xml         |   5 +
 res/drawable/ic_screen_scale_left_default.png | Bin 0 -> 5046 bytes
 res/drawable/ic_screen_scale_left_pressed.png | Bin 0 -> 5173 bytes
 res/drawable/ic_screen_scale_ok.png           | Bin 0 -> 2863 bytes
 res/drawable/ic_screen_scale_right.xml        |   5 +
 .../ic_screen_scale_right_default.png         | Bin 0 -> 4967 bytes
 .../ic_screen_scale_right_pressed.png         | Bin 0 -> 5002 bytes
 res/drawable/ic_screen_scale_tv.png           | Bin 0 -> 25871 bytes
 res/drawable/ic_screen_scale_up.xml           |   5 +
 res/drawable/ic_screen_scale_up_default.png   | Bin 0 -> 5388 bytes
 res/drawable/ic_screen_scale_up_pressed.png   | Bin 0 -> 5386 bytes
 res/drawable/ic_settings_hdmi.png             | Bin 0 -> 3397 bytes
 res/drawable/screen_horizontal_add.xml        |   5 +
 .../screen_horizontal_add_default.png         | Bin 0 -> 1305 bytes
 .../screen_horizontal_add_pressed.png         | Bin 0 -> 1240 bytes
 res/drawable/screen_horizontal_reduce.xml     |   5 +
 .../screen_horizontal_reduce_default.png      | Bin 0 -> 4026 bytes
 .../screen_horizontal_reduce_pressed.png      | Bin 0 -> 3937 bytes
 res/drawable/screen_vertical_add.xml          |   5 +
 res/drawable/screen_vertical_add_default.png  | Bin 0 -> 1319 bytes
 res/drawable/screen_vertical_add_pressed.png  | Bin 0 -> 1236 bytes
 res/drawable/screen_vertical_reduce.xml       |   5 +
 .../screen_vertical_reduce_default.png        | Bin 0 -> 4003 bytes
 .../screen_vertical_reduce_pressed.png        | Bin 0 -> 3944 bytes
 res/layout/preference_dialog_screen_scale.xml |  48 ++
 res/layout/screen_scale_setting.xml           |  86 +++
 res/values-zh-rCN/strings.xml                 |  13 +
 res/values/arrays.xml                         |  42 ++
 res/values/strings.xml                        |  14 +
 res/xml/display_settings.xml                  |   5 +
 res/xml/hdmi_settings.xml                     |  65 ++
 src/com/android/settings/DisplaySettings.java |   3 +
 src/com/android/settings/Settings.java        |   1 +
 .../android/settings/SettingsActivity.java    |   6 +
 .../core/gateway/SettingsGateway.java         |   4 +
 .../display/ConfirmSetModeDialogFragment.java | 116 ++++
 .../android/settings/display/DisplayInfo.java |  67 ++
 .../settings/display/DrmDisplaySetting.java   | 374 +++++++++++
 .../settings/display/HdmiSettings.java        | 585 ++++++++++++++++++
 .../HdmiSettingsPreferenceController.java     |  44 ++
 .../settings/display/NodeDisplaySetting.java  | 136 ++++
 .../settings/display/ScreenScaleActivity.java | 380 ++++++++++++
 .../android/settings/utils/ReflectUtils.java  |  68 ++
 47 files changed, 2114 insertions(+)
 create mode 100644 res/drawable/ic_screen_scale_down.xml
 create mode 100644 res/drawable/ic_screen_scale_down_default.png
 create mode 100644 res/drawable/ic_screen_scale_down_pressed.png
 create mode 100644 res/drawable/ic_screen_scale_left.xml
 create mode 100644 res/drawable/ic_screen_scale_left_default.png
 create mode 100644 res/drawable/ic_screen_scale_left_pressed.png
 create mode 100644 res/drawable/ic_screen_scale_ok.png
 create mode 100644 res/drawable/ic_screen_scale_right.xml
 create mode 100644 res/drawable/ic_screen_scale_right_default.png
 create mode 100644 res/drawable/ic_screen_scale_right_pressed.png
 create mode 100644 res/drawable/ic_screen_scale_tv.png
 create mode 100644 res/drawable/ic_screen_scale_up.xml
 create mode 100644 res/drawable/ic_screen_scale_up_default.png
 create mode 100644 res/drawable/ic_screen_scale_up_pressed.png
 create mode 100644 res/drawable/ic_settings_hdmi.png
 create mode 100644 res/drawable/screen_horizontal_add.xml
 create mode 100644 res/drawable/screen_horizontal_add_default.png
 create mode 100644 res/drawable/screen_horizontal_add_pressed.png
 create mode 100644 res/drawable/screen_horizontal_reduce.xml
 create mode 100644 res/drawable/screen_horizontal_reduce_default.png
 create mode 100644 res/drawable/screen_horizontal_reduce_pressed.png
 create mode 100644 res/drawable/screen_vertical_add.xml
 create mode 100644 res/drawable/screen_vertical_add_default.png
 create mode 100644 res/drawable/screen_vertical_add_pressed.png
 create mode 100644 res/drawable/screen_vertical_reduce.xml
 create mode 100644 res/drawable/screen_vertical_reduce_default.png
 create mode 100644 res/drawable/screen_vertical_reduce_pressed.png
 create mode 100644 res/layout/preference_dialog_screen_scale.xml
 create mode 100644 res/layout/screen_scale_setting.xml
 create mode 100644 res/xml/hdmi_settings.xml
 create mode 100644 src/com/android/settings/display/ConfirmSetModeDialogFragment.java
 create mode 100644 src/com/android/settings/display/DisplayInfo.java
 create mode 100644 src/com/android/settings/display/DrmDisplaySetting.java
 create mode 100644 src/com/android/settings/display/HdmiSettings.java
 create mode 100644 src/com/android/settings/display/HdmiSettingsPreferenceController.java
 create mode 100644 src/com/android/settings/display/NodeDisplaySetting.java
 create mode 100644 src/com/android/settings/display/ScreenScaleActivity.java
 create mode 100644 src/com/android/settings/utils/ReflectUtils.java

diff --git a/AndroidManifest.xml b/AndroidManifest.xml
index bcdee617a9..bc1a5cb68f 100644
--- a/AndroidManifest.xml
+++ b/AndroidManifest.xml
@@ -3450,6 +3450,23 @@
                        android:value="com.android.settings.sound.MediaControlsSettings" />
         </activity>
 
+        <!-- HDMI -->
+        <activity android:name="Settings$HdmiSettingsActivity"
+            android:label="@string/hdmi_settings"
+            android:taskAffinity="">
+            <intent-filter>
+                <action android:name="android.intent.action.MAIN" />
+                <category android:name="android.intent.category.DEFAULT" />
+                <category android:name="android.intent.category.VOICE_LAUNCH" />
+                <category android:name="com.android.settings.SHORTCUT" />
+            </intent-filter>
+            <meta-data android:name="com.android.settings.FRAGMENT_CLASS"
+                android:value="com.android.settings.display.HdmiSettings" />
+            <meta-data android:name="com.android.settings.PRIMARY_PROFILE_CONTROLLED"
+                android:value="true" />
+        </activity>
+
+        <activity android:name="com.android.settings.display.ScreenScaleActivity"/>
         <!-- This is the longest AndroidManifest.xml ever. -->
     </application>
 </manifest>
diff --git a/res/drawable/ic_screen_scale_down.xml b/res/drawable/ic_screen_scale_down.xml
new file mode 100644
index 0000000000..a3079c5bbb
--- /dev/null
+++ b/res/drawable/ic_screen_scale_down.xml
@@ -0,0 +1,5 @@
+<?xml version="1.0" encoding="utf-8"?>
+<selector xmlns:android="http://schemas.android.com/apk/res/android">
+    <item android:state_pressed="false" android:drawable="@drawable/ic_screen_scale_down_default" />
+    <item android:state_pressed="true" android:drawable="@drawable/ic_screen_scale_down_pressed" />
+</selector>
diff --git a/res/drawable/ic_screen_scale_down_default.png b/res/drawable/ic_screen_scale_down_default.png
new file mode 100644
index 0000000000000000000000000000000000000000..a9ebc9ccaf79ff85d5ab2ee1d62d90453c7016e5
GIT binary patch
literal 4538
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
Y0Lli1Nfp-#?*IS*07*qoM6N<$g46+-u>b%7

literal 0
HcmV?d00001

diff --git a/res/drawable/ic_screen_scale_down_pressed.png b/res/drawable/ic_screen_scale_down_pressed.png
new file mode 100644
index 0000000000000000000000000000000000000000..d659b32b5413cbd1ef7f3be51033241994f7290a
GIT binary patch
literal 4670
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
A{r~^~

literal 0
HcmV?d00001

diff --git a/res/drawable/ic_screen_scale_left.xml b/res/drawable/ic_screen_scale_left.xml
new file mode 100644
index 0000000000..1d8a91134e
--- /dev/null
+++ b/res/drawable/ic_screen_scale_left.xml
@@ -0,0 +1,5 @@
+<?xml version="1.0" encoding="utf-8"?>
+<selector xmlns:android="http://schemas.android.com/apk/res/android">
+    <item android:state_pressed="false" android:drawable="@drawable/ic_screen_scale_left_default" />
+    <item android:state_pressed="true" android:drawable="@drawable/ic_screen_scale_left_pressed" />
+</selector>
diff --git a/res/drawable/ic_screen_scale_left_default.png b/res/drawable/ic_screen_scale_left_default.png
new file mode 100644
index 0000000000000000000000000000000000000000..88267602d65e3dba0ec1f19d3abf161216aa0e28
GIT binary patch
literal 5046
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
M07*qoM6N<$f?&s=IRF3v

literal 0
HcmV?d00001

diff --git a/res/drawable/ic_screen_scale_left_pressed.png b/res/drawable/ic_screen_scale_left_pressed.png
new file mode 100644
index 0000000000000000000000000000000000000000..c891da3fac3f168508a0b73e7896f82c868599b4
GIT binary patch
literal 5173
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

literal 0
HcmV?d00001

diff --git a/res/drawable/ic_screen_scale_ok.png b/res/drawable/ic_screen_scale_ok.png
new file mode 100644
index 0000000000000000000000000000000000000000..c84faf70e1bce02cac1c085dac0dedb05863b2cc
GIT binary patch
literal 2863
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
N002ovPDHLkV1i@8hF$;w

literal 0
HcmV?d00001

diff --git a/res/drawable/ic_screen_scale_right.xml b/res/drawable/ic_screen_scale_right.xml
new file mode 100644
index 0000000000..c1b5a4ec36
--- /dev/null
+++ b/res/drawable/ic_screen_scale_right.xml
@@ -0,0 +1,5 @@
+<?xml version="1.0" encoding="utf-8"?>
+<selector xmlns:android="http://schemas.android.com/apk/res/android">
+    <item android:state_pressed="false" android:drawable="@drawable/ic_screen_scale_right_default" />
+    <item android:state_pressed="true" android:drawable="@drawable/ic_screen_scale_right_pressed" />
+</selector>
diff --git a/res/drawable/ic_screen_scale_right_default.png b/res/drawable/ic_screen_scale_right_default.png
new file mode 100644
index 0000000000000000000000000000000000000000..3337409d3b2f9972c18ce8f1ecf487e5dff7cea6
GIT binary patch
literal 4967
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

literal 0
HcmV?d00001

diff --git a/res/drawable/ic_screen_scale_right_pressed.png b/res/drawable/ic_screen_scale_right_pressed.png
new file mode 100644
index 0000000000000000000000000000000000000000..f1f086259f99736e8819039aad50f5cb7e22d64d
GIT binary patch
literal 5002
zcmV;56Lsu~P)<h;3K|Lk000e1NJLTq001%o003?X1^@s6WphA10000PbVXQnQ*UN;
zcVTj606}DLVr3vnZDD6+Qe|Oed2z{QJOBU_EJ;K`RCwClTnUgI)p`D3&$Y9=+5=ta
zfZY{j0U-hip@g!8v9W^@HU=q}P=u7@isKxPoU#d|Vu7*CW$eUpRa~wZyULZs#7QWy
zv5ie7V95#*#ukSGVe15~u0_&nwc2ZTuI`ur{qN}4Jv}qsvn%6rSH0@jy|Xj__rCvn
z@BQ73a}K`=M|!qj@XH%m!@qCX+t-JuTd_SpG&FSRYyn}jWh4p+3jYy2-HYwK&|np@
z?ZdVOK|S$n1Eda!AK~fx82`Q%!My7&2T}*bD4x!-@3p6^FfgwG2PfO1P_5DA7ZA+V
zZyAs}Ag1utp|9628iT)HI|<9X{qNs>lEF7#nFl*h_S*mYD1!OGuLY1Wh!3xN6Yjda
zT=)MU*xm`-j?K4k-8@^HapoGt$5#*gAeaLzm4$Tg061;kbPbHb1J_N#rM(mO*L?L?
z%19g#w_H*oVN;!pA%D?(A-!M_z^ek_@3_+=P&)WyC?DSiyH9ZV$kXTBU-ubg<x{^h
zMw)|gAhT!{bguamNT0I;z%3I9j$oX859BYt8M4c+f=d<y+%b6E{>m-={ry*-bs#ny
zjX-3VTmkK?HUUfLNqCMxcy$KPCE(?0;FSX8`qn|Zrw{JDtON_&O13OtKC3|DfnW&Y
zavbsZVLyc+D#QkX@m$q+6|fRym#&8Hjx5}}_N4t&>yVYdI4eM6fxtsBK_Hwo*#vhh
z1cFpc2wy=~szm}J7-E@rRKZJN?Rg%#YU}vNIRzpB#0IhSN-}J4GH4I31b}A=s44-7
zepP{~NI<EsW#r97yb*y@9c{?Ur)Lc$44^rP)shKxvziG4AsDHajVg%-;*89IuonS{
zdyt-gAuR7<@ctF2?4SH(%Rr(4!~${A2BS`rg^CoM02F;g7pf)h>AnDjpJS;UIPLSp
zhMz)K{xva>dZ~DGb-D?EGKa#uzK23pGR%;TRHVIV7POrZ;3Az<2&B6s19z<)wSWGu
zB<|Qr948crwn1bfm5~f+4<*z`3+R><GZh+n`ny&$;Q$P4f&~UF*G=EwsylXKfmnke
zR@xwL#5j?YBkxtMvl|fJXP_uqAwY^90;)V3f@hgFN@qgu_-!o%34{2=?+nAn%PN#6
z2^ZV;TkpYsS_z~C(E^dc{;1nb84%ir^#9Oz$U$Q1Hgd=Pozo_Tifb!Q2*mR?h`ZMz
zh$|}esmxLYG5C8lYAB5oGUS<*;3ke}b)xH%alMj3rIM;o_Jpd+ux%V1x5fIyL_iRP
zNZ8is>wB&nhE1!h_{Ab(|2E_=xSoE*=)P{QuO5a8B{XP|Zpj$E_G+M1&~9RYga-`S
zN-Pg%GxE2(^X|b>*mSi3flMsE3~~eSK-xu|5XM}#3|Xs(r8-7k%7!)h83n?vST<EL
zwk2DY3}5JR$b;P;3kb3?C?cxpcVw$@@6FRFID%NX5_0FSC!63d`hHKiOPOL&P&4}P
z>wCZ>8BbNVT(VLrkpU=IP4R~^0z3mJAnzQggroiY;xO{Z`o`twO+il=^4YNf*+4g*
zN)rIdh8W$V#Y)llKn6tF%Cjma();$Hyqo8$04n?D8r6$o0@{^l@Vkoxw({9HK(5g@
z2A7Ix>)?dwQeauMdlx+jFUjU169SX~<Cgr`q0hFrvKeqAK<K`(3k84<F?XTK9)sIg
zPTR6xnk<gs9jC1wLA2wS7G?89dQreuluf9YXl|{$4Y*{T!iVFHW<moHf*UaYjP;U5
zJZ$v;&<x0v`o=SR<{^kYc`M*EJ`hqbtzv=&Z6`(Lp={%?T5h#sfpCpsOD3#FWN>+3
zgFzL$<-*gpyqg*VdGew|f3N@hjT7y#bFUDfpcp|A8W1l@gLhRT=vk?Ujw{9+Rea%j
z&;|lbfNb3K!MYFdj{b@*Z+{%sdRBM7@&vNsj^K9{3;=QFWFy!>7;xFRW9?r3IHEzh
z78p-~(5j?HUf+uVAr7%F7K-%uGy}3(cV0a-4}QAqI0`X|-z!;R+FrO+EzXs#5Fq7p
zb=(lbbKjszXbX&H!8dG(1fh>>mQLE2cQyoq>h*Ix?a<c`{ujd$K83ymy%-b~ASpQK
ziV4*?_dOD+5w~r@W`kSCt?i)!2nF)GzQAJNU>vWt*|wE$Z^v01pOR_>x(Q(7T$L&&
z!0-w+ZW(sipt)t#LGQ$kz)>Ky_X-8a>l*@5tb9{nKlEfC2Y3vBs)(vpA|Ol%EPzp~
zN<b8;6#!S-1n0hS2i3{5rL_d+ks$OD3XXR*jUx!=gLo3T0-PAn!DHJe(F>wVu?hj<
zpg~j=E7+JzK)9_|mR)d5oq}E}{&B_Pl6`q?+!^A(>(2LnhAEgUz*I=37{g>zs}-*(
z0N4;aBL;YY1#UB<?4*^2^EFGW_T~9;f&7{6!CpI5RBX5sfB+*{5KRD34Jj}QU=0%i
zm1<xcbq?W%Ls5QRQy{2bLh@Jj^*6U>$zusNv^sHfb`?O+KWmRvC&&f8lkT&oU<SGh
z_T^1+R~onI&W=4@FkUE2CLGCxWI(aORJ0b1fEP6IhS59OaY0YOPS(W&f~-8DHZNhi
zn1-ib0;x*OBf-H@XC?(^3>#NKfQO=YBcYk^(V84rof}A3RwY^ceMEP*zm}J(B}SjQ
z1_aYA5IAlL6&(562;K-=w3=PKFkolhNq~G#cU~Uql)^GO`rHzpKxrmGekN!ajRcRc
zVqI-u2S$;1^~C~$>b1{SujlqK0wJf>TnQ|UoRfkGb{HrX3(YN}0r14Eh#g|<xHZZC
z$P2o&b6;B8h5=!L5iBW?9Jn>Vs24XFv~sNI4jBB~lK?ThtuMabP9sjj3l($BqKEI9
zAPA;D12I%8f|bs!YhU&z0b&gP^%Hq%&}1iI?8QGrt+6*q2IFnl2Eh!TQ;p1on*u>Q
zIi#W>*~yU+Fd&p+nC7!3uV?nUP#SW5;R7IAQ>}T~z(C}aZiY_j&e2gv3Cg74pxIIP
z6d;B|FT3YSSa8QfP~7ieTE<)RRv`wLb_K3GlLC1yVDQWqzK#vx{mwP-f!+;&3d`@?
z2BpKjv<#5E5`fj@T-K3J3dF7XZtaGZT^L}%YqX|))jC-5<yUZqyb7vg4QwZ>HE_kP
z?6aHYqL<Kf89{4Usc+Ef1<PRIOFxC|l1)%P=0%UZ7T6Y?*QPjDPy`(m;{qwy*eDAP
zR2USi1;cWASia>^=ziCyp?HAHWT1s3Dk!#A!Vyv<GmtSI(!x9Mhb4dY9hf<glgj~7
zHo=m4wYWeY(w$d^=J~R+*1hSxx7`Z;U)Twilgq>eG*Oz;G7vS<iWZtdt<A(das!va
zz(2hNEV~{mBXxphJ=<xKkp?<8yCc=T5c(c`8roNW7@a`!)P9bD%*`Qo!<KyPYtVD!
zgVFAH4s9eM8?6<5W|y>PAA!i&=-9Bg&&-b(2h->}AXuW&6bs*DKiCXY&wo7#AOV=T
zmDpyt_uSrcZ8pyB;FXLKZ+Zkq{^R#CxqPN&`$z&LT6y^Fw5f7p7o7aJ_kufqI1vC*
zLu?(7CjnwsESB_ELM&)4(i2`D3sm8kkHhFAcc@yF2AOXJ7`qT!*W1T6_6rS=b1KRP
zLT12O4ZwQG__oi$sc&s;3?kt~EG{EvCU)_1Hz;h)WRTTGA!@WnANwOHy!KejzVhgJ
zfT3zqAU$S2u)qtf@^D_Wpcsk6oj8W}umLK^Uv0r4eH9y?V38BPxIoO5a#bG(ui}Jc
z<qg*sN{4p9$iugQH#0ix;5k_i0GWvm1Y?NVRJq{X0uGM01s=f$S00#==@<9?H&oFh
zo&Nqu<z~<v9Q#fOMBWzwvhsf#7*v1%ZMu8qifOU|0^`{%$N<O#afP8O-8i?o4F1Mc
zIc47&OOm3j)t##c#hxLP3+}`WGYsjq#(;V;26KJ9F`lz8|2GMcMY?m%#jXKBAk0RT
z<$4*5ySU!c5fu!Z0#UUeOxs6yN6KP>$$vLC!)jwmcs|i`ek%Weq8JE<+<y4186&3l
z<EE=85CD2B&ry3hIw(q&;wIH%zM4f%kY)jD&qzSr@g!+{zwW&IO0oUyh{9I-H##F2
z#^u>JdT2gnOae%M4oB(5<C(~{wubIk)e#!CI)70bQwmXp=9%3!sb*4-m~jGD0OP!I
zv=1-)G;tEIp9vWHj<_j`sUy7O?GyMzS*1>nD#cLS1v-9!W2cR3g@su{vc{=$42BL)
z1PuL$O@SaAqT*E6IJQ;chO30|DaC|mF(J1RxRuijD2#<RKN+jDfF0kpi5zRBXc%$P
z&|@+3=eqNO^{1h$vkenICltxKVaCh~^&eS;{E@4XaSflt3&R0X4>!$z6&s87^@nZ{
zUMj6zuBVvcfkFWCW`xJ{%|R`EF+adqJ6B<~Yks_ZB48iS#7W~#{qJq-Mxnd2os67>
zr#(;ZPia*(gC1AUER|Z74wjuq${vRlROelzo%WrF8v+U2#^#NVZ{(h*Sm9P>L&^_?
z%Fu!7?Kc*Y+sk|PoK@sX41Pd7Q5v$3t<4xQY}|hB8I0uJz}*b7U_hAS7^VzeY=TOU
z1&$I_ZB=sv!1GsD7z9>X7^`*7JYYW_yzpiqe*B{03=!G*ip|D{Zfv7V!G;`tM^(jf
z6%bX4D^s>(ZIXhrCuTNCS;VZ12bYg5dNep~Q%?_d*)l)XY^rN2g8tyzap>w;Kx!rH
zu4LNIDG|`ZiGrGxQ6t*2_EbfXD5|GrdLCd%5)lEYW<y7-VHJ*^0T`O<u=A_GsS5<z
z5R)fL^cVM(;A6LlFGAaJ(@LE@rAB_)5+l`;8=XS6Wch|DvT>9hX;o4T0R&iz1{GT1
z!}jB$fLaYTTYT84Z>(R5$)TIV5zgTEq*bMlBZc5hLLya?8|=gcm&N(qVai*{`gXqn
zlSQf&v-jqWaR*m5LTdHxW<bow`@EbdOBGWN{aHqGrLRm+Vym)9!1Yk;JZ0pbEEHml
z;z|IJ=NZwpy4k`q3!DMvRblsucxn|HN5~|~C2$;^*QYv7Ob}^@M`|VwoPJW2b8uA^
zBv@jOQoB$oAXDFA)XuY(SUn4ztY?w6kskbDf8G{tSDbaN1EA_UhDS40pzlr$gVTYu
zvQDce3qd$3xtt_e5H;{At}3mCCrg>SUR}!=1f>`-Wwgqc^a$##xhl(Tw;m0=iQtQI
zwiW(U-*|R^7o3^I(J#$Fb?g9m;&D`A_<%;o(2I$)lar~6c=9ckr6=I%DLC;EnRv`q
zJS&BLYT}tJ(H!~w6l2o<<Y!arb1CzA(pgli@9xgnv%w;&)x%AJs7NWxnM!Hc@<^9_
zGGb;Ds;Bl~!dM~@T-XegK%8`*p6V1&s)<IzQ$H&O63-|S2nB$IOoafX<+Zp^p3gB)
z#(igBpswtZBpW@S*PZ7M_Q2mg)?vU@PNI5N!~-(z*z)peP$95jLya!=N$4Cg#WVob
z40GmxWb>KJ5E!vnvhy$t8~F!g1HliACzeeP^P~Oq;gjD}U<wmZ9)4Le18EY3DZvO(
zS}`L)(CBCA!F*y$3!GL!(^Az8OIDMQ0+!%kb_LjYHu2V*df|#GG~4>de7Nt25{x@D
z4&@`y(}=N5UNMk009eWbB>tXOp!9uX7h?1k1Bwai(;|0)*!aa*Aa-nSX%A7oaK#66
zXg=KkR43(qZs81q`I&t3nN+B)7Jy~^K2uqxZdt`zHlS+620c+-2(z&R<@tHbo1tMa
z+m6hKPi>X+0dHmuN{4?U-x6S{6)1run4I6zIUj@u?u66|-L5xt8g?FWT4JN&a!?JJ
zWAo|7ECi-73MHH}^U{>%v6P_NV+qfcvK>LzQY~dSDe2+7;uvlEd|~IJme^>zuGJXK
zDFpL>7;h$(VdpIs${4|={xjJ(-bsT@(Sv4UL-gTSvi9W3OTtF1wckcy-0720I=CHp
zaa?&ME3Rmjb5wjuWrB=|gcDnJ{0NLsSKwQF7TQ1i)g)}h-a~8%X7V@`-`IxgamH5{
z?Zr~Q+tn&YDUM=CytziG>DOLt4@dEjCS6XAUHQ-$%$rbreJiTjxQWut3V38M6xCBE
z4H0g<I(mTS<4+6)*!X-a>%xgjI2wY%Bvb5A3B#qJXN=tkV-`-ZUme{~_VM6zfwwyC
zQ-S&H0*S?p08=>a+X1OkCXibR(ADvyWZ+gRB96OTU8!%WsHPd1!tU>rpmN@x(lk&L
zySwG#7jZ7m!v_A)Y~Haot9Q`hTwlCe!PKd|bJ-}pJBz*;8A<gHK)Sb|Uauoqs*W8b
zpdwAb`{^$G&1b^E^RwCun(bQw8-b~}bs**%UwUb&{WX7yK>qnH1rh~DywvFa^%L~G
zNBD>UF(+>aWOMcA%rF>Hn|uB8F<5<WiR#(+o=(G0j&+1{sc8h!ITydr=JFMw2qx}3
z8s`*5%U-L2HxnxIfSxutI3Ar#5OdB*h#j$dd7Dx<;gJri8R&foqBz&T_x}P605MvF
U=P~lR8UO$Q07*qoM6N<$f`a^23jhEB

literal 0
HcmV?d00001

diff --git a/res/drawable/ic_screen_scale_tv.png b/res/drawable/ic_screen_scale_tv.png
new file mode 100644
index 0000000000000000000000000000000000000000..82c281578f4cdd9f57db9f5add73a775662a335c
GIT binary patch
literal 25871
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
AApigX

literal 0
HcmV?d00001

diff --git a/res/drawable/ic_screen_scale_up.xml b/res/drawable/ic_screen_scale_up.xml
new file mode 100644
index 0000000000..59ad06bbe8
--- /dev/null
+++ b/res/drawable/ic_screen_scale_up.xml
@@ -0,0 +1,5 @@
+<?xml version="1.0" encoding="utf-8"?>
+<selector xmlns:android="http://schemas.android.com/apk/res/android">
+    <item android:state_pressed="false" android:drawable="@drawable/ic_screen_scale_up_default" />
+    <item android:state_pressed="true" android:drawable="@drawable/ic_screen_scale_up_pressed" />
+</selector>
diff --git a/res/drawable/ic_screen_scale_up_default.png b/res/drawable/ic_screen_scale_up_default.png
new file mode 100644
index 0000000000000000000000000000000000000000..3a4dc1d1c6a13915f9f62e86e2a0d420e40e37a5
GIT binary patch
literal 5388
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

literal 0
HcmV?d00001

diff --git a/res/drawable/ic_screen_scale_up_pressed.png b/res/drawable/ic_screen_scale_up_pressed.png
new file mode 100644
index 0000000000000000000000000000000000000000..5bb7cab4bc8f9af700b2b04ffb6a0cd23e1d0d48
GIT binary patch
literal 5386
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

literal 0
HcmV?d00001

diff --git a/res/drawable/ic_settings_hdmi.png b/res/drawable/ic_settings_hdmi.png
new file mode 100644
index 0000000000000000000000000000000000000000..641d291e0d208112f2bd5197bf316afa222b17a2
GIT binary patch
literal 3397
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
b7{3Pq^<sxX6q;;700000NkvXXu0mjfvZ8|n

literal 0
HcmV?d00001

diff --git a/res/drawable/screen_horizontal_add.xml b/res/drawable/screen_horizontal_add.xml
new file mode 100644
index 0000000000..d011c0fd7e
--- /dev/null
+++ b/res/drawable/screen_horizontal_add.xml
@@ -0,0 +1,5 @@
+<?xml version="1.0" encoding="utf-8"?>
+<selector xmlns:android="http://schemas.android.com/apk/res/android">
+    <item android:state_pressed="false" android:drawable="@drawable/screen_horizontal_add_default" />
+    <item android:state_pressed="true" android:drawable="@drawable/screen_horizontal_add_pressed" />
+</selector>
diff --git a/res/drawable/screen_horizontal_add_default.png b/res/drawable/screen_horizontal_add_default.png
new file mode 100644
index 0000000000000000000000000000000000000000..624aa8f4a84ebe645de12603ba890836aabd4baf
GIT binary patch
literal 1305
zcmV+!1?KvRP)<h;3K|Lk000e1NJLTq002+`002e^1^@s6Tb>gu0000PbVXQnQ*UN;
zcVTj606}DLVr3vnZDD6+Qe|Oed2z{QJOBU$yGcYrRCwC#oJ~v<Q4q&xONnjxkd{h{
zNfE`MfF2A6qk<X}6BEP1gC4wSqEYUCT#X)$-aHtiQDeO54K?9pVnQ@1NCb_ALnYxO
z1}KowQa%cGrhQwnY|6H~%a-oEWSsrzu6@7#znwRaz9+?EG2oJYu`vP$Xlk)59dte#
zUUMwc=G%$REzFUpJm%4+$RZ&9Uc&`q>HwyIBUt;<ycQ4?)pa`=!t$W+N09RwD=?)T
zK=X*F^OK$qDs<lLnohM<>3&ay<`6BcK?tT0?NinOQGL4vybxL^f?LXG`3bd+A;<~z
zN72f0dlw!LWE(_0!u#_bUJ6L6t6%JH(-MWtg`c!wfR*d))&kHjqVkf}=%EUuYF=~P
z59E$C17v^<kP8E3fDF)@MN%4(RvOOAs1w@e%gJGG>>NuP2OC&{dKbHqH%BE)M%_D;
z;Ve{+VJ(6c$N(8217v`kv|D0m08|-xYz$8uL>t4?2GPdwv_Z71g{KCnksW6<-fs%m
zNF0SXB9$X0r7CW-s7tRwg;bT&H5m;i<P$I>f!p%ooo1$5*L??C8KRn|t}2LF5u)0`
zSB}Cwn7{xTAOqy0ZziH!Br|kCB9{9KL;$U1R#g|KZmnb+uE34xHyZIPeSQZrKn^0B
zOY4X0PIS#^J69e4{PyI7eg>Ex96`H@)`I3zI6r`{6YVy_9A$w2!+D18lDt1TISF%f
zbIJ2AmkUZtO7`F;*;)MjEog(M3@`!j9lA5i%gZn{Gz5V_0G5{4PD?2&DuUYDTBxk7
zq=_$2E}lPk_{HltS1cVw5Z)_-7l}lmtE&qJ1_qMwmhb;c8kKN3486U*(AU=oD=RB>
z=rTgQYFU5??*h6D(P$L9ySrg#W=7R@BO@cw-=B;p_Yh)LE(45;jHJ+j|2wW8zuynD
zv$GjpI668CV`F2qxfSh>L0O1>HG^yc28Ay-AmSdUraL^G-Oq^!2M6WNW`o2f&s3e#
z0#Kf@xL0Qt#w$%K%68QdiqfLl@5W}_q_g^{u6xDqMAlIlbJ_rc^9lu?!0jK9n6bW~
z@jKFta0rD$$$*irD4j33Q5SFeWo2cwOG^@b(E;2RNK9|t2Z`zb!E}?Y)pldP!M`;V
z4vKf8rZ0M}*R_9odKwlMv^|H##l^(aXlOX*gxBLbH{m~M>t;Xe0u<{bd==CG<yAYj
zXzG00?P1|H)v&NI@m6s-9ATZHEx^B3I|90Pq^UWh3+VAJTPG$Cp*vDsT%2r<>6)$5
z`S^EoI^({lr>7k&++n4DAmy}BQBk2q#o%_k|GS@M0KPr>fYj1M0l?$&WOa|~>S`z`
zD4@;vn9_x;n98-&KlSzXG6>a$ntn}9jlBENlBpc3@GiQK1f#LBQ8h#wRA_2yl0W|(
z)z@JrK(j|<E~9l|Gv3|O(h|>cgTbI;;E*H<d_Eu4)z!)H+Qs#z7DHxhW|-DhqkD{Y
ziuNhH7#|-8O7mz0rnIy)t~#&Rn~b_xUJ^W1--a&7qVxkx(*dpmNrM7s&>GWx>?7J!
zZ2m9J_^Vt_16&32w8)irpw*&%hr}{Wod_<OuH`g9E}Nqp!vMJe{1spT8sw-ut<zpZ
P00000NkvXXu0mjfC81lK

literal 0
HcmV?d00001

diff --git a/res/drawable/screen_horizontal_add_pressed.png b/res/drawable/screen_horizontal_add_pressed.png
new file mode 100644
index 0000000000000000000000000000000000000000..f946498a1681ec3f1cd19046ca50ee5b5fcffa6c
GIT binary patch
literal 1240
zcmV;}1Sk86P)<h;3K|Lk000e1NJLTq002+`002e^1^@s6Tb>gu0000PbVXQnQ*UN;
zcVTj606}DLVr3vnZDD6+Qe|Oed2z{QJOBU$dPzh<RCwC#oX<}aK@`VdO9?a}LaC%2
zP!Lo3c`!8?71WD~3DFxKIOqYRe}QMCN6(&&#vjBB-iRh#i9`c}M2bnvp%Q+@00k0S
zeirb(cD59$W!WFJblyuIv%B3Hc0T)^eKV8HSax=HfK9tu836-KtJ#uWTm{R%Yj)VF
z!o(pwKTCP6p)ZglgWpLQ?8{(D_6<w~h?xjhBf3j6as5H}B8#<D0BtG?x`6H!Z|9eI
zJ8RiUOo)YASiKNTF8bG0c~UA63p^_d3!(Sn^-US1hxI0KSJ6+9Xt3Ua|0(dGAmS9M
zPZoGWKvY+sI6b8&3YUs>UcvyY)Y+j2pe^BzNM%^(h?+RT{Xp(WGe8E&0NEHI17v`5
z+JUn%8po0uIn9mrvgoWAE6`}OW%3(0%FJvLtUw0H02v?yJf_`}Ob9$yhNrLYR)(h!
zqLtz4gJ@HmK@HGM={TG5SrU0H9EFc!C`U^A_bnY4bs06pOjiFxO(tX$Ff)N$v*DYT
zPPJN%kh`q#R0k0mA*!u2M`4~!V1Nve0kRo85=rNnGpiJc0B)1ZsxCG4H${Om^&9yc
z$N;lAh-k6<ciZfkG^1A~T>kd1>!X(erUpmQ9;3IQmn8Y!k4Yc;6NEX<O?WSyH<)}u
zzeDim=jUN!Vj}L#%gc1zdGrqS5xl>H6}SuU6DF-&TU#(bJ`RCE05&)GFH0#XC;+$H
z4dvzKwD9E>=DUnad?2*~5yA(8x4OCt{r&ym_xt1UM&F0yP8JS_VR(2LMn*<pdwZKM
zbzuI7(gMWFw`0;Ci9}#<a1fT3mQ>}NnwkQyHy%%(V>zcY8DK>8$a78j-%<7Wd_LtH
zr`o2cr(tGhh7M1nKQ(C-VoPM86<|=Lr6xq&>(q27Cnq(PF*Y`)95$OIE@h?af*yd%
zip3g(RT!-_sYvUtAuB5@O0z$QFQmy}^-*1G#Oa*oC`=2Du`riV;0-(;h1iPqb)C;h
zi?|^a3dI9PDogfz!@YuN(=RSArc>IIV88%yc@SIP+5oYAA%e<cYdzhVAF#V;!bS0q
zbUkQE$)m=_#YI?O*Y_SaHa22!qrU!{9lB->Zo<($6Lj|j#r_E2#qxh;*N!}0oll!B
zEK*%H%*~B`Rr2%m!v;ZHhuvK}0)}>^MS%e$o^o!k?Gh$e3JVM4%`sK8P4;`VCD`rJ
zbZBU(8=tR7rhXueX`!sFOpl7e;c)CJPa1$Y1S7Q!Q2=l{otnz1tgM8boE$p*jOB%7
z9LjampSrp_1%zs&re9rMt(?A)awvzYd4@?Z!SHxIsv**(LQ_+da{pVQW@%?*Xj-ZV
zoAJ4pmX_!kHy8{i4ICDW1u7~kptiPFf!8har`1eZt$D~{T_q+j(Qnc@jV@+qXMu)!
zGy_vqR1{U6%jJqkU9?Vuhw3}h?N~HzK6Zp4X;PpS-IL<BUi8-pt}`8K%V>ZJAa9AW
z@)>kD`cH^$!_<f12GZGFRRd%@9^DuQ$OiCNfB^snft3LJ?Up3~0000<MNUMnLSTYm
C?ki6K

literal 0
HcmV?d00001

diff --git a/res/drawable/screen_horizontal_reduce.xml b/res/drawable/screen_horizontal_reduce.xml
new file mode 100644
index 0000000000..b5583dcc6e
--- /dev/null
+++ b/res/drawable/screen_horizontal_reduce.xml
@@ -0,0 +1,5 @@
+<?xml version="1.0" encoding="utf-8"?>
+<selector xmlns:android="http://schemas.android.com/apk/res/android">
+    <item android:state_pressed="false" android:drawable="@drawable/screen_horizontal_reduce_default" />
+    <item android:state_pressed="true" android:drawable="@drawable/screen_horizontal_reduce_pressed" />
+</selector>
diff --git a/res/drawable/screen_horizontal_reduce_default.png b/res/drawable/screen_horizontal_reduce_default.png
new file mode 100644
index 0000000000000000000000000000000000000000..c6ce222251e6955485e507ff9f533d7944d23caf
GIT binary patch
literal 4026
zcmV;r4@K~aP)<h;3K|Lk000e1NJLTq002+`002e^1^@s6Tb>gu00009a7bBm000XU
z000XU0RWnu7ytkYO=&|zP*7-ZbZ>KLZ*U+<Lqi~Na&Km7Y-Iodc-oy)cUY767Czti
zWe-+D*zmEJY=HnGBdiF>5Lu!Sk^o_Z5E4Meg@_7P6crJiNL9pw)e1<Rh~l6qxMx9%
zh+2zPTsZC@+^4mDdhhM+``7!t=bY#K&Uw!dfDsZVk>;Xm069{HJUZAPk55R%$-RIA
z6-eL&AQ0xu!e<4=008g<d3b(wus{3(uWtYX0C3eVBofEr|AV?vCRYF;kpSQ#66Xs6
zkWv81E>y@A0LT~suv4>S3ILP<0Bm`DLLvaF4FK%)Nj?Pt*r}7;7Xa9z9H|HZjR63e
zC`Tj$K)V27Re@400>HumpsYY5E(E}?0f1SyGDiY{y#)Yvj#!WnKwtoXnL;eg03bL5
z07D)V%>y7z1E4U{zu>7~aD})?0RX_umCct+(lZpemCzb@^6=o|A>zVpu|i=NDG+7}
z<RYAxn<EoQ=L1a63;+Nc`O(4tI6si*=H%h#X6J10^u?n7Yw&L(J|Xen{=AF=1OO0D
z&+pn_<>l4`aK{0#b-!z=TL9Wt0BGO&T{GJWpjryhdijfaIQ&2!o}p04JRKYg3k&Tf
zVxhe-<BLB3GvROGi+=X}Kpy_vdhh^onn0PYz@vlxaba$Du2PQY%LGC(ZujRS{>O!X
z{f;To;xw^bEES6JSc$k$B2CA6xl)ltA<32E66t?3@gJ7`36pmX0IY^jz)rRYwaaY4
ze(nJRiw;=Qb^t(r^DT@T3y}a2XEZW-_W%Hszxj_qD**t_m!#tW0KDiJT&R>6OvVTR
z07RgHDzHHZ48atvzz&?j9lXF70$~P3Knx_nJP<+#<bWIsp%|7y8C1YJ*aWq(0~(+a
zn&A+%!7(@u=im}tf$MM=24EPT!Wg`U2?RmN2oqr;I*1Wsj@Tm32p5@-1R`NbG?IX%
zAnAw{Q6k02a-;&OLTZs+NF(wsauhj@TtNDe+sGg?iu{VaM=_LvvQY!n0(C&Ss2>`N
z#-MZ2bTkiLfR>_b(HgWKJ%F~Nr_oF3b#wrIijHG|(J>BYjM-sajE6;FiC7vY#};Gd
zST$CUHDeuEH+B^pz@B062qXfFfD`NpUW5?BY=V%GM_5c)L#QR}BeW8_2v-S%gfYS=
zB9o|3v?Y2H`NVi)I<b&gMyw|8As!)~C0-{E6JL`^Bo4`v<W349C6F>n3rTB8+ej^>
zQ=~r95NVuDChL%G$=>7$vVg20myx%S50Foi`^m%Pw-h?Xh~i8Mq9jtJloCocWk2Nv
zrJpiFnV_ms&8eQ$2&#xWpIS+6pmtC%Q-`S&G<BLK&6^fO%cL!%)zF%0XKD9nFX?o;
z3EhJpMVHW*(rf4k>F4Q#^mhymh7E(qNMa}%YZ-ePrx>>xFPTiH1=E+A$W$=bG8>s^
zm=Bn5Rah$aDtr}@$`X}2l~$F0mFKEdRdZE8)p@E5RI61Ft6o-prbbn>P~)iy)E2AN
zsU20jsWz_8Qg>31P|s0cqrPALg8E|(vWA65poU1JRAaZs8I2(p#xiB`SVGovRs-uS
zYnV-9TeA7=Om+qP8+I>yOjAR1s%ETak!GFdam@h^#<Ae=IoX^_&LPeX&U-BbEk7->
z)@rS0t$wXH+Irf)+G6c;?H29p+V6F6oj{!|o%K3xI`?%6x;DB|x`n#ib<gTP(_`y-
z=?V49^$zLX(MR=d^rQ6`>hIR?(H}Q3Gzd138Ei2)WAMz7W9Vy`X}HnwgyE<W%V@fh
z#Au_@NuwvYChmu4<285}K4z?M9Ad0A-euftJYiyKGTWrYq{ZaEDb18?nr6Duw9|CV
z%*ZU<tk|r{?2b9roNJz8zS+Fn{EdaBMV!S-i#ChLmfDtl%LSHAmiMffRz6mFR`pib
ztVz~f>n!VS)>mv$8&{hQn>w4zwy3R}t;BYlZQm5)6pty=DfLrs+A-|>><a9f>;~;Q
z_F?uV_HFjh9n2gO9o9Q^JA86<b<B2baJ=iJ;WWdk#HqvSS7#e%p>v({H5aB!kjoO6
zc9$1ZZKsN-Zl8L~mE{`ly3)1N^`o1+o7}D0ZPeY&J;i;i`%NyJ8_8Y6J?}yE@b_5a
zam?eLr<<q3^N{B+UUpttUi-ZsPqUmRp4KpJ$lJtQ;JwRxU^+fMW%|zP13tz+0-t)H
zhrXu1BHul}BYxI?nSKZSp8Grc%l(h|zu|fE7V%C6U;)7a<pI5c8iBI|YXctynFOT=
zH3f|Yy9O@|J{3X?2@P2va+7bs7xEkVV>8@mESk|3$_SkmS{wQ>%qC18))9_|&j{ZT
zes8AvOzF(F2#DZEY>2oYX&IRp`F#{ADl)1r>QS^)ba8a|EY_^#S^H<bj`5GFjJZ48
zYPNEAXRK;$Qfy=Fo4A0us<?r8hxkSDmlAXnBnj<_<iyy-J&EIU0_SX+Go0j_RF-sO
zuI1dKxfkZ?&dZ*6JXtkakbF3Wm=c$=KjniULQpRlPvxg>O&t^Rgqwv=MZThqqEWH8
zxJo>d=ABlR_Bh=;eM9<ahEGOy#xn^|QY(3p8Irjp^G#Mn*50ho*>Tw|Ih34~oTE|=
zX_mAr*D$vzw@+p(E0Yc6dFE}(8<U61_v9n_bMxC3Y=unGqqI`4P!1MMFQ_YcTNqn-
zxJbQ7TGTV&X8!8=BMX8Se7%scP`I$O*tmFE@!%rAMY|Rwi&GbOE-_tFx@351@X~$D
zXv?ye{ZQgqQdRP5dED}jQiIZ^r9&%%S2UHWl*!9(uJl^DV-;bQWL58Km(^QVe<~N1
zU#xJfsIK_1M!4qUS59BmeD!&4+S=Yqx61A7Nb98QZmjoNzpqNYYC+Y|hVTuo8}W_h
z8((co-gKdQYW0rIw9U%R12tha?OV*YtlRRTHly}>oqt`+R{gE3x4zjX+Sb3_cYE^=
zgB=w+-tUy`ytONMS8KgRef4hA?t<Nq8e$u|zvh13xJP$S#h#CQrF#eVMeplsbZ>0j
zufM;t32jm~jUGrkaOInTZ`zyfns>EuS}G30LFK_G-==(f<51|K&cocp&EJ`SxAh3?
zNO>#LI=^+SEu(FqJ)ynt=!~PC9bO$rzPJB=?=j<Jb;mW2SDv7qC_VA{<bspqr(~y|
zolZYJ)S29Q_e}hmYh6)Yy=Ozuo<A3K?o78|_sR3#=Z{_Rym0g)_hQ>6w@a-(u02P7
zaQ)#(uUl{HW%tYNS3ItC^iAtK(eKlL`f9+{bJzISE?u8_z3;~C8@FyI-5j_jy7l;W
z_U#vU3hqqYU3!mrul&B+{ptt$59)uk{;_4iZQ%G|z+lhASr6|H35TBkl>gI*;nGLU
zN7W-nBaM%pA0HbH8olyl&XeJ%vZoWz%6?Y=dFykl=imL}`%BMQ{Mhgd`HRoLu6e2R
za__6DuR6yg#~-}Tc|Gx_{H@O0eebyMy5GmWADJlpK>kqk(fVV@r_fLLKIeS?{4e)}
z^ZO;zpECde03c&XQcVB=dL;k=fP(-4`Tqa_faw4Lbua(`>R<o>I+y?e7jKeZ#YO-C
z1m{UaK~#9!?3_<bBV`o8e^c6QC#_gYC6EosE(TX{4+eu#i<%}TCZyiru$MisS-Drw
zW<45v^UxTLZZ=-n+g1}!O*Rq@D@X*5KujeR8UieklrsDu51rwUE~U($Qkd^0&CIl&
zZ{GKt_vXFtYriL{s)`Wf;t~i1z;hLMu@4obgMAtG8W7Z8-b>136IcOO<V5D50}lO-
zC!Qb`dj={<$f#c6CQ$D%<5~bF<V0q(7(jOk4ZQ}0w7c^su%aMsTB&I;F<TMDl>SDq
z=3(uc!FYh5i=88#5{0j8jjaPi3et`pidPE2BOpD%+rV?0(WH$Ak&w2Xv<qG(ik!&o
z0F&C`3udBlt+riuV1U*895e&atp$@Er_qxWncY(2gvbL$A}s(4fC8Wp0Z;%G0G%nP
z&c+x@LQ&^{s}-0W8|qN8*%-Sl@TyZR&~0bq3Q|dT-0s;JrN2=vs|y=--6Jlno&})o
zu4|D#GO7q7A_@zD0^qUd%4HBUeQ}-Fg)aj<OI-LOL$pG7SEVR&5#gPfNE>NfMpY{%
z?=u3g#6C+R3YTLjSBfS5_l{i@>(g~LqQ7k;k&6V+YMot9glDDhE~mn?st+zF!?U6<
zA_|Mi1OZS06p8c+38UGm{ZhsL-$cw^$LxQkZ6C1f9lSIacmzOHv&7^X+g;!i{HtH-
zZ;WcY$+B9Yg49q+E-ZqG0O+tNe4Y|b#bh81Ts!jiFUd%JLI5ldE)0AEbOANb_<RZ&
z0zOSf;`73VkHh&E_zCzBs99cKW_EV=;FZhe0A2?AfbnQ5)+a1bliR&LKLFi(dwa~x
z%#co}+1dI3vJ{`sM{8><4Gj%J;Ol5A_GU5?zvE~NyxrULJ<zQv3d6(0OifKa6COZ5
zpJ!}rjPdbt_V@Pz`l6}WUB?2v-P>~uxV5{x%gD$GYinyIoi{f($Hc@zJo!ADiZxX-
zz+G)b;<4e{cL63RC-rAs$ud7bPd1wccpkWC(<sD!lz~xzPql5W#nu-F-c=NZOeSNf
zjp^xWeK%~Aap@~nSIhv^S1jJJ*b2h{*=!c0RYNv5HgvatDVmCPT5NqD;D&a%WH<^d
zNNE|hUbDdWWYj+>tXSVNsbf39`uaKmdtdx@<_4-heuZ2vM<5V@LP>%r7J$1#VR`GT
z6zW1el@pn?+3Bp`IINlQy7o*orD#pfM>khjSJ~P!cOSO5w+nZpz5Shm{>DX%U3dXF
zb@X#8K&?K)uQKX&4y$%tF_nC}-Fa<ms)rs=;i=;Fdh-@R+v2clN7~XvT0u%vq;|kr
zWNE4A4d5-m-+$naMnsln07gegAIXW#pp){zA%MENIx|*GFc>`6o?`&sA9y$jj0OS$
zLZOhMHkzB8sj8|1_%RuYuRC!l_Xwb^txX3}viSXeT3TB4!!I2<l)FFh@H61C-|wfR
zqoZVqKA(@y&QAUN-z6jQK}Q1Aq!0Kz6bjMR)kSUX$paoql4xpbA{-9m^?G#+KKE%Y
zTUKkHaah+3d<DD@u(r0w;^HETqL9z$sjjZZ=krltUw;sFfd@ceG7>LKITlmJ$I2nW
z#4OQN>>kh!bQJmOW8j-)B>teBR(2r(>Jm-GKG4R>F9NN=?-a@~4J9M-C+Fd&h5-tx
g{2(F#I$i!900ok(C34270RR9107*qoM6N<$f@8gt4gdfE

literal 0
HcmV?d00001

diff --git a/res/drawable/screen_horizontal_reduce_pressed.png b/res/drawable/screen_horizontal_reduce_pressed.png
new file mode 100644
index 0000000000000000000000000000000000000000..19d1a923a9a4b81b45c6b234cb3ab432cd2274b2
GIT binary patch
literal 3937
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

literal 0
HcmV?d00001

diff --git a/res/drawable/screen_vertical_add.xml b/res/drawable/screen_vertical_add.xml
new file mode 100644
index 0000000000..6a23f91ea4
--- /dev/null
+++ b/res/drawable/screen_vertical_add.xml
@@ -0,0 +1,5 @@
+<?xml version="1.0" encoding="utf-8"?>
+<selector xmlns:android="http://schemas.android.com/apk/res/android">
+    <item android:state_pressed="true" android:drawable="@drawable/screen_vertical_add_pressed" />
+    <item android:state_pressed="false" android:drawable="@drawable/screen_vertical_add_default" />
+</selector>
diff --git a/res/drawable/screen_vertical_add_default.png b/res/drawable/screen_vertical_add_default.png
new file mode 100644
index 0000000000000000000000000000000000000000..ed08b42716bf209f23180249b3c7548f1feb0c00
GIT binary patch
literal 1319
zcmV+?1=#wDP)<h;3K|Lk000e1NJLTq002+`002e^1^@s6Tb>gu0000PbVXQnQ*UN;
zcVTj606}DLVr3vnZDD6+Qe|Oed2z{QJOBU$$w@>(RCwC#oL@{+R~*OBg*ICL4Qgf7
z(1nR1g6s)}Y(h+yIF}e6-GeVPnNi<$dnMcBrf)thCPa<#Mc+gdo|cdhO$6nkTh@_S
zN%)h6QNu!^6pG#VSI(&|T-V-v>7{snzvS27xwrTHxu5epJ?D3BTO*xL3l{rQ!3Y>2
z17v^<kc9#6l6X`iA&gyXgima)rO*aruYg0F^8s#o^HUhV)ctlU0E{6k@Ko9gL|otR
zfWa#C4Jqn;?brilg9z4V&?YxMZ|gaiJdy785Gm>mz=l!ps?|aa6^YOgMnRt=8IZm6
zhwPnIx8QB@V57vHw_lF1V-jWzbw0H^gpHg~?yxK@4jn~d>u!49Za|c6@xq*h){@hp
z&ZrfDxwCLU+DIwkDKNQO=zNLWLiZYxhX<W3V-85Wpy6sn-Lu~bKu=DOXeGGkl-Z=p
z3u%r-7$5^=VSo&<oW)ZPjo3@OFzkWl<blP;v>&oZdvy1pZ@)R`gXukS;+HdYJT`VN
z2=najgNNZ_^5^cx^vm8Gvg(25@)>5OJpk7W^F6c=+F)|YU(iwL0AS9V)TJ*#z`G4|
zA-j{Xupm}eR<iFmG&G3X+FEr;yVgGd;vfUug!dTc?8e51n3|dr(P&hxuW#Q!sjjXT
zZEbBL7!0aYgMfIkAVA-*(?tVJTnVLRp0WT~s6G9^UA+%;K9NX>iHQlZxVV^oZ{zx(
z*>vT#_H4Sjxmk2}c8ZFM%!1|e(3dxE$-4Af#sJ=Vf|p9A#Q6Al9=!jPnVA_84rk|+
zpHa>yx~>B+(Mu!}5lc%;mNL%H&WgFYIZA#6{ZTuB@EV$NPtnkwo}RW<#^mIrO7`mL
zfti~oFS7f6NSdYPus?zh>DFx_O-~y|JRaXRVVH^8`!uo8(66trr$c&n{#+*y%zRNG
znM^t=WNmFtB@gO0g#XP9H;=Oc=k<E?%F}5GXP*1k)YNQS=M`E9<}K8HK9zi}n+H-%
zD;gUc?eDt4d;NZYUU}L8MD#EW^MWRTKp<eNjFy%bQCV3@$tNf;uH!=b5xsPDbSMx-
z3l06&)>d_RQ_DyMUh@;o2*K#;>M9x{Z7OtkcdP5~NN*OpO(IIZgAQXDAL;As%fz^`
zSj=?dFbqS4LLt%K-mc(1lKF+U0O38a5Jj9u@>W$<)#;v|o=kKxKR+)h%v)Yw7Ik%X
z8Lw+<YRa8;?-4xYf2%b>32_SMD}ba;fwP!cx@2@=CL_>6<hl3W*;!~RfHD9x0FYl(
ztQ-smPa@Pigm7&{t{X>j&GUlG8=<+#Nnto~C1iO+dB*^%onRe>AFMkRXAjoP<XH%N
zAOm#%8M;?LN7(}zAOmE843LEZmIJ_)TvB*-gMfSX<T9`eFedE*4IN26D0$-~l%roP
zehfW|9*H4LTQ6acr;9o7MyM!9+);V>kJbFy?+2o>RM;2N1L;@lzf+Ike9}#bZoxzS
z`^4tYTRVmP#X9PIY9YVrX2MJH?mrWb=U!-IqhY8Jp!Y#67M|L}+X49-8n%<sv!&tW
zd1GkUVe#%?JNA{z3(O$8xWki_pLsOOqIL_(8^XJ}ncy<KooI7DKo(v|Ge8E&09hEI
d%krN90|4O;$_=_iw_^YR002ovPDHLkV1krjbuj<{

literal 0
HcmV?d00001

diff --git a/res/drawable/screen_vertical_add_pressed.png b/res/drawable/screen_vertical_add_pressed.png
new file mode 100644
index 0000000000000000000000000000000000000000..9be8c2a8a57ca93c20f968f11304c558903f8956
GIT binary patch
literal 1236
zcmV;_1S|WAP)<h;3K|Lk000e1NJLTq002+`002e^1^@s6Tb>gu0000PbVXQnQ*UN;
zcVTj606}DLVr3vnZDD6+Qe|Oed2z{QJOBU$c1c7*RCwC#oXt-YK@`B>LK`7`2&Et;
zU=RoatS3Sf1>(tQLO9}qgPLgcFVL&eqh39k5I=|)y@4iNNr)zZ;ZRH}heE<f3{rxj
z1qvnjUOQWMOD)}9*cRu#<n_&d&CLGhP3L2GRyjC002cF7zz7&117v^<kc9!}NE~Wl
z8<d=7q8Ji=Da?a%R={DN^#D^2UP9v%T4W{xgfVIao*Fg+5zp_pz+eY;ofOlYx9ou;
zLj>yzYOS4~m%7g;Po#UTBgHh`X#JS(j?qXIbtFPn7$drhLANNKAEI=2?1Go#!OAHY
zUXiF_mj%oaruo%q6;?Duxh4@=7<B?8+q2X2asg4~#fhdHwTzqw(+nB`sBMMa!Uj$g
zo(e{*$L&AmywJS{#AdaXZcLT1YZCTG)O&VW0qD?_h*X02981@zaz~m+A`FlLvM@jf
zn9t(KhfJKMSs3=feDc6-$F%>mM>}Nqpu4vRiqZ6Rb-lbv+f!2m9yH(Hef;Fl=6daH
zOus0-QKKH1FaKdi@`K=d&^$)%MXgM8%1_h@)Tan@IZayf0z`Ok(A-PTB&@B$*49??
zcx7cJl$DjKn>1_v1R)MFzy!R{X!`c|_hDgS0fNCG?Cl+$KPf3Gf!5Ym@OV7xt|5f@
zKx%*p?*p2_?d@%tnVEr&jg927+4qrT*n6iW8LqFd2d~!)1qJaA%OiyNS_@E`ZVbX3
zBzUn{45p{2b?`FD($W(6{mJ&^1;%qx)_&ka`UwOAu(`Qu=)&dYWms8Rq2PJcXVL)_
zE$(%yx{Hg8rs9~Jn^S{5GJ0VArpb%Uz7I*Qw5awiSRg*xI@0vC5yIi{kp?53q&rRx
z3swD!iVE7KXXleLd0_lSfoL>pDU#jYT{T!OTNVBjuWk-&70&5&>f)2B3df)OmX?+t
z>E|8S57hNDi;LCZylfswV_K-GsWCt6g5K+LxpeVK0}w|KV`#op1K@VMO~ujJ*a(G%
zg%tdP@r7mVNRQA@M@NSWB5R?l-`w1+ZoZOoB!XV^9L+ev=<Mvw8X`?9_<TO~{I|lJ
zLAFLjmHVh;SdCkHdwb(!+)yZ#w&73|1sWO}puN3ag*PIu*PkchbXFr8no+qy+cdgZ
zU0nql=0zeAC@(LMdtGg9t+v%2CV1$5dz!T51gHT?lLCFHof%FWhr~SKaGJE_2B-mf
zi^j?xkEa`ldUZHl8yEe?2?RHpAuR@&a;>5J&-j+U*^J95{9xUpSn|NL{7MFUAOqC@
zho05{QT9Lv$N(8217u-<`2a8`x)e^?AmBYav<%Dw3<+B$p(CjeO4h9m<!Hs?1=Kby
zkx(wy3#ab4alLSx*!*qu`qUNc*MtYsD)m`NtXPlQ3DGWinEp9PEN}I~Nvv2G08i|j
z3E9l6{R?8Y@GO3GLMy+(;5QS}&IgJJrtn}B9DcRq+-Z3Mfyza-6%vKRuXY5@Mxyh;
yTuvs~4DTfJtOv-#9cc#002v?)1GHKG3NQf4lHE<qSVBPn0000<MNUMnLSTaJ^h8ns

literal 0
HcmV?d00001

diff --git a/res/drawable/screen_vertical_reduce.xml b/res/drawable/screen_vertical_reduce.xml
new file mode 100644
index 0000000000..b966a27ef6
--- /dev/null
+++ b/res/drawable/screen_vertical_reduce.xml
@@ -0,0 +1,5 @@
+<?xml version="1.0" encoding="utf-8"?>
+<selector xmlns:android="http://schemas.android.com/apk/res/android">
+    <item android:state_pressed="false" android:drawable="@drawable/screen_vertical_reduce_default" />
+    <item android:state_pressed="true" android:drawable="@drawable/screen_vertical_reduce_pressed" />
+</selector>
diff --git a/res/drawable/screen_vertical_reduce_default.png b/res/drawable/screen_vertical_reduce_default.png
new file mode 100644
index 0000000000000000000000000000000000000000..5ac723ed2c0af9bdbfde3d8cd6ce958ea8ea706e
GIT binary patch
literal 4003
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
JPDHLkV1iT>mF)lk

literal 0
HcmV?d00001

diff --git a/res/drawable/screen_vertical_reduce_pressed.png b/res/drawable/screen_vertical_reduce_pressed.png
new file mode 100644
index 0000000000000000000000000000000000000000..790bb0cda036701cf849a2d934bfe247aae817f1
GIT binary patch
literal 3944
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
CI*vgA

literal 0
HcmV?d00001

diff --git a/res/layout/preference_dialog_screen_scale.xml b/res/layout/preference_dialog_screen_scale.xml
new file mode 100644
index 0000000000..811b9b993f
--- /dev/null
+++ b/res/layout/preference_dialog_screen_scale.xml
@@ -0,0 +1,48 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!-- Copyright (C) 2008 The Android Open Source Project
+
+     Licensed under the Apache License, Version 2.0 (the "License");
+     you may not use this file except in compliance with the License.
+     You may obtain a copy of the License at
+
+          http://www.apache.org/licenses/LICENSE-2.0
+
+     Unless required by applicable law or agreed to in writing, software
+     distributed under the License is distributed on an "AS IS" BASIS,
+     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+     See the License for the specific language governing permissions and
+     limitations under the License.
+
+     Copyright (C) 2009 Motorola, Inc.
+     March 23, 2009 - Motorola - Allow automatic brightness changes.
+-->
+
+<ScrollView xmlns:android="http://schemas.android.com/apk/res/android"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent">
+
+    <LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
+        android:layout_width="match_parent"
+        android:layout_height="match_parent"
+        android:gravity="center_horizontal"
+        android:orientation="vertical"
+        android:paddingBottom="20dip">
+
+
+        <ImageView
+            android:id="@android:id/icon"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:paddingTop="20dip"
+            android:visibility="gone" />
+
+
+        <SeekBar
+            android:id="@*android:id/seekbar"
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:max="20"
+            android:padding="20dip" />
+
+    </LinearLayout>
+</ScrollView>
diff --git a/res/layout/screen_scale_setting.xml b/res/layout/screen_scale_setting.xml
new file mode 100644
index 0000000000..1f5e75fdbe
--- /dev/null
+++ b/res/layout/screen_scale_setting.xml
@@ -0,0 +1,86 @@
+<?xml version="1.0" encoding="utf-8"?>
+<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    android:layout_width="fill_parent"
+    android:layout_height="fill_parent"
+    android:background="@drawable/ic_screen_scale_tv">
+
+    <ImageView
+        android:id="@+id/screen_touch_up"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_centerHorizontal="true"
+        android:layout_marginTop="80dp"
+        android:src="@drawable/screen_vertical_reduce" />
+
+    <ImageView
+        android:id="@+id/button_up"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_below="@id/screen_touch_up"
+        android:layout_centerHorizontal="true"
+        android:layout_marginTop="20dp"
+        android:src="@drawable/ic_screen_scale_up" />
+
+    <ImageView
+        android:id="@+id/button_ok"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_below="@id/button_up"
+        android:layout_centerHorizontal="true"
+        android:layout_marginTop="10dp"
+        android:background="@drawable/ic_screen_scale_ok" />
+
+    <ImageView
+        android:id="@+id/button_down"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_below="@id/button_ok"
+        android:layout_centerHorizontal="true"
+        android:layout_marginTop="10dp"
+        android:src="@drawable/ic_screen_scale_down" />
+
+    <ImageView
+        android:id="@+id/button_left"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_marginRight="10dp"
+        android:layout_marginTop="205dp"
+        android:layout_toLeftOf="@id/button_ok"
+        android:src="@drawable/ic_screen_scale_left" />
+
+    <ImageView
+        android:id="@+id/button_right"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_marginLeft="10dp"
+        android:layout_marginTop="205dp"
+        android:layout_toRightOf="@id/button_ok"
+        android:src="@drawable/ic_screen_scale_right" />
+
+    <ImageView
+        android:id="@+id/screen_touch_down"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_below="@id/button_down"
+        android:layout_centerHorizontal="true"
+        android:layout_marginTop="20dp"
+        android:src="@drawable/screen_vertical_add" />
+
+    <ImageView
+        android:id="@+id/screen_button_left"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_marginRight="20dp"
+        android:layout_marginTop="230dp"
+        android:layout_toLeftOf="@id/button_left"
+        android:src="@drawable/screen_horizontal_reduce" />
+
+    <ImageView
+        android:id="@+id/screen_button_right"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_marginLeft="20dp"
+        android:layout_marginTop="230dp"
+        android:layout_toRightOf="@id/button_right"
+        android:src="@drawable/screen_horizontal_add" />
+</RelativeLayout>
diff --git a/res/values-zh-rCN/strings.xml b/res/values-zh-rCN/strings.xml
index 2f2eae12e4..0fa630df37 100644
--- a/res/values-zh-rCN/strings.xml
+++ b/res/values-zh-rCN/strings.xml
@@ -4954,4 +4954,17 @@
     <string name="screenshot_show">在状态栏上显示截屏按钮</string>
     <string name="screenshot_version">截屏管理器版本</string>
     <string name="later">秒以后截屏</string>
+
+    <!--hdmi settings-->
+    <string name="system_rotation">"系统方向"</string>
+    <string name="screen_title">"屏幕设置"</string>
+    <string name="screen_main_title">"主屏"</string>
+    <string name="screen_aux_title">"副屏"</string>
+    <string name="screen_switch">"开关"</string>
+    <string name="screen_resolution">"分辨率设置"</string>
+    <string name="screen_scale">"屏幕缩放"</string>
+    <string name="screen_rotation">"屏幕旋转"</string>
+    <string name="screen_full_vh">"满屏显示"</string>
+    <string name="confirm_dialog_title">保存确认</string>
+    <string name="confirm_dialog_message">将会取消</string>
 </resources>
diff --git a/res/values/arrays.xml b/res/values/arrays.xml
index 7e8b49c0a2..3bfcd59bdb 100644
--- a/res/values/arrays.xml
+++ b/res/values/arrays.xml
@@ -1530,4 +1530,46 @@
         <item>StaticIP</item>
         <item>DHCP</item>
     </string-array>
+
+    <!-- HDMI -->
+    <string-array name="hdmi_resolution_entries">
+        <item>1920x1080p-50Hz </item>
+        <item>1920x1080p-60Hz</item>
+        <item>1280x720p-50Hz</item>
+        <item>1280x720p-60Hz</item>
+        <item>720x576p-50Hz </item>
+        <item>720x480p-60Hz </item>
+    </string-array>
+    <string-array name="hdmi_resolution_values">
+        <item>1920x1080p-50\n</item>
+        <item>1920x1080p-60\n</item>
+        <item>1280x720p-50\n</item>
+        <item>1280x720p-60\n</item>
+        <item>720x576p-50\n</item>
+        <item>720x480p-60\n</item>
+    </string-array>
+    <string-array name="hdmi_rotation_entries">
+        <item>0</item>
+        <item>90</item>
+        <item>180</item>
+        <item>270</item>
+    </string-array>
+    <string-array name="hdmi_rotation_values">
+        <item>0</item>
+        <item>90</item>
+        <item>180</item>
+        <item>270</item>
+    </string-array>
+    <string-array name="dual_screen_ver_hor_entries">
+        <item>0</item>
+        <item>90</item>
+        <item>180</item>
+        <item>270</item>
+    </string-array>
+    <string-array name="dual_screen_ver_hor_values">
+        <item>0</item>
+        <item>1</item>
+        <item>2</item>
+        <item>3</item>
+    </string-array>
 </resources>
diff --git a/res/values/strings.xml b/res/values/strings.xml
index dce1f23f46..69cded8375 100644
--- a/res/values/strings.xml
+++ b/res/values/strings.xml
@@ -12199,4 +12199,18 @@
     <string name="screenshot_show">Show the screenshot button in the statusbar</string>
     <string name="screenshot_version">Show the version of screenshot manager.</string>
     <string name="later">s later capture</string>
+
+    <!--hdmi settings-->
+    <string name="hdmi_settings">HDMI</string>
+    <string name="system_rotation">System Direction</string>
+    <string name="screen_title">Screen Setting</string>
+    <string name="screen_main_title">Main Screen</string>
+    <string name="screen_aux_title">Aux Screen</string>
+    <string name="screen_switch">Turn on/off</string>
+    <string name="screen_resolution">Resolution</string>
+    <string name="screen_scale">Screen Zoom</string>
+    <string name="screen_rotation">Screen Rotation</string>
+    <string name="screen_full_vh">screen full display</string>
+    <string name="confirm_dialog_title">Save Confirm</string>
+    <string name="confirm_dialog_message">Will cancel it</string>
 </resources>
diff --git a/res/xml/display_settings.xml b/res/xml/display_settings.xml
index 05e23f3eb4..77ff247154 100644
--- a/res/xml/display_settings.xml
+++ b/res/xml/display_settings.xml
@@ -155,4 +155,9 @@
         android:title="@string/display_vr_pref_title"
         android:fragment="com.android.settings.display.VrDisplayPreferencePicker" />
 
+    <PreferenceScreen
+        android:key="hdmi_settings"
+        android:title="@string/hdmi_settings"
+        settings:keywords="@string/hdmi_settings"
+        android:fragment="com.android.settings.display.HdmiSettings" />
 </PreferenceScreen>
diff --git a/res/xml/hdmi_settings.xml b/res/xml/hdmi_settings.xml
new file mode 100644
index 0000000000..4090f23e42
--- /dev/null
+++ b/res/xml/hdmi_settings.xml
@@ -0,0 +1,65 @@
+<?xml version="1.0" encoding="utf-8"?>
+<PreferenceScreen xmlns:android="http://schemas.android.com/apk/res/android">
+
+    <ListPreference
+        android:entries="@array/hdmi_rotation_entries"
+        android:entryValues="@array/hdmi_rotation_values"
+        android:key="system_rotation"
+        android:title="@string/system_rotation" />
+
+    <PreferenceCategory
+        android:key="main_category"
+        android:title="@string/screen_title">
+
+        <SwitchPreference
+            android:key="main_switch"
+            android:persistent="true"
+            android:title="@string/screen_switch" />
+
+        <ListPreference
+            android:defaultValue="2"
+            android:entries="@array/hdmi_resolution_entries"
+            android:entryValues="@array/hdmi_resolution_values"
+            android:key="main_resolution"
+            android:persistent="true"
+            android:title="@string/screen_resolution" />
+
+        <Preference
+            android:key="main_screen_scale"
+            android:title="@string/screen_scale" />
+    </PreferenceCategory>
+
+    <PreferenceCategory
+        android:key="aux_category"
+        android:title="@string/screen_title">
+
+        <SwitchPreference
+            android:key="aux_switch"
+            android:persistent="true"
+            android:title="@string/screen_switch" />
+
+        <ListPreference
+            android:defaultValue="2"
+            android:entries="@array/hdmi_resolution_entries"
+            android:entryValues="@array/hdmi_resolution_values"
+            android:key="aux_resolution"
+            android:persistent="true"
+            android:title="@string/screen_resolution" />
+
+        <Preference
+            android:key="aux_screen_scale"
+            android:title="@string/screen_scale" />
+
+        <CheckBoxPreference
+            android:key="aux_screen_vh"
+            android:title="@string/screen_full_vh" />
+
+        <ListPreference
+            android:entries="@array/dual_screen_ver_hor_entries"
+            android:entryValues="@array/dual_screen_ver_hor_values"
+            android:key="aux_screen_vhlist"
+            android:title="@string/screen_rotation" />
+    </PreferenceCategory>
+
+
+</PreferenceScreen>
\ No newline at end of file
diff --git a/src/com/android/settings/DisplaySettings.java b/src/com/android/settings/DisplaySettings.java
index 6b23b29190..3492cf1d08 100644
--- a/src/com/android/settings/DisplaySettings.java
+++ b/src/com/android/settings/DisplaySettings.java
@@ -23,6 +23,7 @@ import android.os.Bundle;
 import com.android.settings.dashboard.DashboardFragment;
 import com.android.settings.display.BrightnessLevelPreferenceController;
 import com.android.settings.display.CameraGesturePreferenceController;
+import com.android.settings.display.HdmiSettingsPreferenceController;
 import com.android.settings.display.LiftToWakePreferenceController;
 import com.android.settings.display.NightDisplayPreferenceController;
 import com.android.settings.display.NightModePreferenceController;
@@ -45,6 +46,7 @@ public class DisplaySettings extends DashboardFragment {
     private static final String TAG = "DisplaySettings";
 
     private static final String KEY_SCREEN_TIMEOUT = "screen_timeout";
+    private static final String KET_HDMI_SETTINGS = "hdmi_settings";
 
     @Override
     public int getMetricsCategory() {
@@ -90,6 +92,7 @@ public class DisplaySettings extends DashboardFragment {
         controllers.add(new ShowOperatorNamePreferenceController(context));
         controllers.add(new ThemePreferenceController(context));
         controllers.add(new BrightnessLevelPreferenceController(context, lifecycle));
+        controllers.add(new HdmiSettingsPreferenceController(context, KET_HDMI_SETTINGS));
         return controllers;
     }
 
diff --git a/src/com/android/settings/Settings.java b/src/com/android/settings/Settings.java
index bc7575800b..e94e647ffd 100644
--- a/src/com/android/settings/Settings.java
+++ b/src/com/android/settings/Settings.java
@@ -242,4 +242,5 @@ public class Settings extends SettingsActivity {
     public static class MediaControlsSettingsActivity extends SettingsActivity {}
     public static class ScreenshotSettingsActivity extends SettingsActivity { /* empty */ }
 
+    public static class HdmiSettingsActivity extends SettingsActivity {}
 }
diff --git a/src/com/android/settings/SettingsActivity.java b/src/com/android/settings/SettingsActivity.java
index 2314e7f4af..76739f0495 100644
--- a/src/com/android/settings/SettingsActivity.java
+++ b/src/com/android/settings/SettingsActivity.java
@@ -59,6 +59,7 @@ import com.android.settings.core.SettingsBaseActivity;
 import com.android.settings.core.SubSettingLauncher;
 import com.android.settings.core.gateway.SettingsGateway;
 import com.android.settings.dashboard.DashboardFeatureProvider;
+import com.android.settings.display.HdmiSettings;
 import com.android.settings.ethernet.EthernetSettings;
 import com.android.settings.homepage.TopLevelSettings;
 import com.android.settings.overlay.FeatureFactory;
@@ -663,6 +664,11 @@ public class SettingsActivity extends SettingsBaseActivity
                 EthernetSettings.isAvailable(), isAdmin)
                 || somethingChanged;
 
+        somethingChanged = setTileEnabled(changedList, new ComponentName(packageName,
+                        Settings.HdmiSettingsActivity.class.getName()),
+                HdmiSettings.isAvailable(), isAdmin)
+                || somethingChanged;
+
         if (UserHandle.MU_ENABLED && !isAdmin) {
             // When on restricted users, disable all extra categories (but only the settings ones).
             final List<DashboardCategory> categories = mDashboardFeatureProvider.getAllCategories();
diff --git a/src/com/android/settings/core/gateway/SettingsGateway.java b/src/com/android/settings/core/gateway/SettingsGateway.java
index 5a95949cfc..77adbf0400 100644
--- a/src/com/android/settings/core/gateway/SettingsGateway.java
+++ b/src/com/android/settings/core/gateway/SettingsGateway.java
@@ -79,6 +79,7 @@ import com.android.settings.deviceinfo.StorageSettings;
 import com.android.settings.deviceinfo.aboutphone.MyDeviceInfoFragment;
 import com.android.settings.deviceinfo.firmwareversion.FirmwareVersionSettings;
 import com.android.settings.deviceinfo.legal.ModuleLicensesDashboard;
+import com.android.settings.display.HdmiSettings;
 import com.android.settings.display.NightDisplaySettings;
 import com.android.settings.display.darkmode.DarkModeSettingsFragment;
 import com.android.settings.dream.DreamSettings;
@@ -184,6 +185,7 @@ public class SettingsGateway {
             BackgroundCheckSummary.class.getName(),
             VpnSettings.class.getName(),
             EthernetSettings.class.getName(),
+            HdmiSettings.class.getName(),
             DataSaverSummary.class.getName(),
             DateTimeSettings.class.getName(),
             LocaleListEditor.class.getName(),
@@ -352,5 +354,7 @@ public class SettingsGateway {
             Settings.MyDeviceInfoActivity.class.getName(),
             Settings.ModuleLicensesActivity.class.getName(),
             UserBackupSettingsActivity.class.getName(),
+            // Home page > Display
+            Settings.HdmiSettingsActivity.class.getName(),
     };
 }
diff --git a/src/com/android/settings/display/ConfirmSetModeDialogFragment.java b/src/com/android/settings/display/ConfirmSetModeDialogFragment.java
new file mode 100644
index 0000000000..14ed22f984
--- /dev/null
+++ b/src/com/android/settings/display/ConfirmSetModeDialogFragment.java
@@ -0,0 +1,116 @@
+package com.android.settings.display;
+
+import android.app.AlertDialog;
+import android.app.Dialog;
+import android.content.DialogInterface;
+import android.os.Bundle;
+import android.os.Handler;
+import android.os.Message;
+
+import androidx.fragment.app.DialogFragment;
+
+import java.io.Serializable;
+
+import com.android.settings.R;
+
+/**
+ * ConfirmSetModeDialogFragment
+ */
+
+public class ConfirmSetModeDialogFragment extends DialogFragment {
+
+    private OnDialogDismissListener mListener;
+
+    public static ConfirmSetModeDialogFragment newInstance(DisplayInfo di, OnDialogDismissListener listener) {
+        ConfirmSetModeDialogFragment frag = new ConfirmSetModeDialogFragment();
+        Bundle b = new Bundle();
+        b.putSerializable("displayinfo", di);
+        b.putSerializable("listener", listener);
+        frag.setArguments(b);
+        return frag;
+    }
+
+    private AlertDialog mHdmiResoSetConfirmDialog;
+    private boolean mIsOk = false;
+
+    @Override
+    public Dialog onCreateDialog(Bundle savedInstanceState) {
+
+        mDisplayInfo = (DisplayInfo) getArguments().getSerializable("displayinfo");
+        mListener = (OnDialogDismissListener) getArguments().getSerializable("listener");
+
+        mHdmiResoSetConfirmDialog = new AlertDialog.Builder(getActivity())
+                .setTitle(getString(R.string.confirm_dialog_title))
+                .setMessage(getString(R.string.confirm_dialog_message) + " 10s")
+                .setPositiveButton(getString(R.string.okay), new DialogInterface.OnClickListener() {
+                    @Override
+                    public void onClick(DialogInterface dialog, int which) {
+                        mIsOk = true;
+                        mHdmiResoSetConfirmDialog.dismiss();
+                    }
+                }).setNegativeButton(getString(R.string.cancel), new DialogInterface.OnClickListener() {
+                    @Override
+                    public void onClick(DialogInterface dialog, int which) {
+                        mIsOk = false;
+                        mHdmiResoSetConfirmDialog.dismiss();
+                    }
+                }).create();
+        startTimeCount();
+        return mHdmiResoSetConfirmDialog;
+    }
+
+    @Override
+    public void onDismiss(DialogInterface dialog) {
+        super.onDismiss(dialog);
+        stopTimeCount();
+        DrmDisplaySetting.confirmSaveDisplayMode(mDisplayInfo, mIsOk);
+        mListener.onDismiss(mIsOk);
+        mIsOk = false;
+    }
+
+    private DisplayInfo mDisplayInfo;
+
+    private static final int TYPE_NEGATIVE = 0;
+
+    private int mNegativeCount = 10;
+    private boolean isTimeCountRunning = false;
+
+
+    public void startTimeCount() {
+        mNegativeCount = 10;
+        isTimeCountRunning = true;
+        myHander.sendEmptyMessageDelayed(TYPE_NEGATIVE, 1000);
+    }
+
+    public void stopTimeCount() {
+        isTimeCountRunning = false;
+    }
+
+    private Handler myHander = new Handler() {
+        public void handleMessage(Message msg) {
+            switch (msg.what) {
+                case TYPE_NEGATIVE:
+                    if (!isTimeCountRunning) {
+                        return;
+                    }
+                    if (mNegativeCount > 0) {
+                        if (mHdmiResoSetConfirmDialog != null) {
+                            String text = getString(R.string.confirm_dialog_message);
+                            text = text + " " + mNegativeCount + "s";
+                            mHdmiResoSetConfirmDialog.setMessage(text);
+                        }
+                        mNegativeCount--;
+                        myHander.sendEmptyMessageDelayed(TYPE_NEGATIVE, 1000);
+                    } else {
+                        DrmDisplaySetting.confirmSaveDisplayMode(mDisplayInfo, false);
+                        mHdmiResoSetConfirmDialog.dismiss();
+                    }
+                    break;
+            }
+        }
+    };
+
+    public interface OnDialogDismissListener extends Serializable {
+        void onDismiss(boolean isok);
+    }
+}
diff --git a/src/com/android/settings/display/DisplayInfo.java b/src/com/android/settings/display/DisplayInfo.java
new file mode 100644
index 0000000000..f2d71cec4c
--- /dev/null
+++ b/src/com/android/settings/display/DisplayInfo.java
@@ -0,0 +1,67 @@
+package com.android.settings.display;
+
+import java.io.Serializable;
+import java.util.Arrays;
+
+/**
+ * 显示信息
+ *
+ * @author GaoFei
+ */
+public class DisplayInfo implements Serializable {
+    private int displayId;
+    private int type;
+    private String description;
+    private String[] modes;
+    private String[] orginModes;
+
+    public int getDisplayId() {
+        return displayId;
+    }
+
+    public void setDisplayId(int displayId) {
+        this.displayId = displayId;
+    }
+
+    public int getType() {
+        return type;
+    }
+
+    public void setType(int type) {
+        this.type = type;
+    }
+
+    public String getDescription() {
+        return description;
+    }
+
+    public void setDescription(String description) {
+        this.description = description;
+    }
+
+    public String[] getModes() {
+        return modes;
+    }
+
+    public void setModes(String[] modes) {
+        this.modes = modes;
+    }
+
+    public String[] getOrginModes() {
+        return orginModes;
+    }
+
+    public void setOrginModes(String[] orginModes) {
+        this.orginModes = orginModes;
+    }
+
+    @Override
+    public String toString() {
+        StringBuilder builder = new StringBuilder();
+        builder.append("displayId:").append(displayId).append("  ")
+                .append("type:").append(type).append("  ")
+                .append("description:").append(description).append("  ")
+                .append("modes:").append(Arrays.toString(modes));
+        return builder.toString();
+    }
+}
diff --git a/src/com/android/settings/display/DrmDisplaySetting.java b/src/com/android/settings/display/DrmDisplaySetting.java
new file mode 100644
index 0000000000..8e25ad7094
--- /dev/null
+++ b/src/com/android/settings/display/DrmDisplaySetting.java
@@ -0,0 +1,374 @@
+package com.android.settings.display;
+
+import android.R.integer;
+import android.util.Log;
+
+import com.android.settings.utils.ReflectUtils;
+
+import java.util.ArrayList;
+import java.util.Arrays;
+import java.util.List;
+
+/**
+ * Drm Display Setting.
+ */
+
+public class DrmDisplaySetting {
+    private final static String TAG = "DrmDisplaySetting";
+
+    public final static int DISPLAY_TYPE_MAIN = 0;
+    public final static int DISPLAY_TYPE_AUX = 1;
+
+    private static void logd(String text) {
+        Log.d(TAG, TAG + " - " + text);
+    }
+
+    public static List<DisplayInfo> getDisplayInfoList() {
+        List<DisplayInfo> displayInfos = new ArrayList<DisplayInfo>();
+        Object rkDisplayOutputManager = null;
+
+        try {
+            rkDisplayOutputManager = Class.forName("android.os.RkDisplayOutputManager").newInstance();
+            logd("getDisplayInfoList->rkDisplayOutputManager->name:" + rkDisplayOutputManager.getClass().getName());
+        } catch (Exception e) {
+        }
+        logd(" getDisplayInfoList 1");
+        int[] mainTypes = (int[]) ReflectUtils.invokeMethod(rkDisplayOutputManager, "getIfaceList", new Class[]{int.class}, new Object[]{DISPLAY_TYPE_MAIN});
+        logd(" getDisplayInfoList 2");
+        int[] externalTypes = (int[]) ReflectUtils.invokeMethod(rkDisplayOutputManager, "getIfaceList", new Class[]{int.class}, new Object[]{DISPLAY_TYPE_MAIN});
+        logd(" getDisplayInfoList 3");
+
+        if (mainTypes != null && mainTypes.length > 0) {
+            int currMainType = (Integer) ReflectUtils.invokeMethod(rkDisplayOutputManager, "getCurrentInterface", new Class[]{int.class}, new Object[]{DISPLAY_TYPE_MAIN});
+            DisplayInfo displayInfo = new DisplayInfo();
+            displayInfo.setDisplayId(DISPLAY_TYPE_MAIN);
+            logd(" getDisplayInfoList 4");
+            displayInfo.setDescription((String) ReflectUtils.invokeMethod(rkDisplayOutputManager, "typetoface", new Class[]{int.class}, new Object[]{currMainType}));
+            logd(" getDisplayInfoList 5");
+            displayInfo.setType(currMainType);
+            String[] orginModes = (String[]) ReflectUtils.invokeMethod(rkDisplayOutputManager, "getModeList", new Class[]{int.class, int.class}, new Object[]{DISPLAY_TYPE_MAIN, currMainType});
+            orginModes = filterOrginModes(orginModes);
+            displayInfo.setOrginModes(orginModes);
+            displayInfo.setModes(getFilterModeList(orginModes));
+            logd(" getDisplayInfoList 6");
+            displayInfos.add(displayInfo);
+        }
+        if (externalTypes != null && externalTypes.length > 0) {
+            int currExternalType = (Integer) ReflectUtils.invokeMethod(rkDisplayOutputManager, "getCurrentInterface", new Class[]{int.class}, new Object[]{1});
+            DisplayInfo displayInfo = new DisplayInfo();
+            displayInfo.setType(currExternalType);
+            String[] orginModes = (String[]) ReflectUtils.invokeMethod(rkDisplayOutputManager, "getModeList", new Class[]{int.class, int.class}, new Object[]{1, externalTypes});
+            orginModes = filterOrginModes(orginModes);
+            displayInfo.setOrginModes(orginModes);
+            displayInfo.setModes(getFilterModeList(orginModes));
+            displayInfo.setDescription((String) ReflectUtils.invokeMethod(rkDisplayOutputManager, "typetoface", new Class[]{int.class}, new Integer[]{currExternalType}));
+            displayInfo.setDisplayId(1);
+            displayInfos.add(displayInfo);
+        }
+        return displayInfos;
+    }
+
+    public static List<String> getDisplayModes(DisplayInfo di) {
+        List<String> res = new ArrayList<String>();
+        if (di.getDisplayId() == DISPLAY_TYPE_MAIN) {
+            di = getMainDisplayInfo();
+        } else if (di.getDisplayId() == DISPLAY_TYPE_AUX) {
+            di = getAuxDisplayInfo();
+        }
+        if (di != null) {
+            String[] modes = di.getOrginModes();
+            if (modes != null && modes.length != 0) {
+                res = Arrays.asList(modes);
+            }
+        }
+        return res;
+    }
+
+    public static String getCurDisplayMode(DisplayInfo di) {
+        if (di.getDisplayId() == DISPLAY_TYPE_MAIN) {
+            logd("DrmDisplaySetting getCurDisplayMode DISPLAY_TYPE_MAIN" + System.currentTimeMillis());
+            return getCurMainMode();
+        } else if (di.getDisplayId() == DISPLAY_TYPE_AUX) {
+            logd("DrmDisplaySetting getCurDisplayMode DISPLAY_TYPE_AUX " + System.currentTimeMillis());
+            return getCurAuxMode();
+        }
+        return null;
+    }
+
+    public static String getCurMainMode() {
+        return getMainMode();
+    }
+
+    public static String getCurAuxMode() {
+        return getAuxMode();
+    }
+
+    public static void setDisplayModeTemp(DisplayInfo di, int index) {
+        String mode = getDisplayModes(di).get(index);
+        setDisplayModeTemp(di, mode);
+    }
+
+    public static void setDisplayModeTemp(DisplayInfo di, String mode) {
+        if (di.getDisplayId() == DISPLAY_TYPE_MAIN) {
+            setMainModeTemp(mode);
+        } else if (di.getDisplayId() == DISPLAY_TYPE_AUX) {
+            setAuxModeTemp(mode);
+        }
+    }
+
+    public static void saveConfig() {
+        Object rkDisplayOutputManager = null;
+        try {
+            rkDisplayOutputManager = Class.forName("android.os.RkDisplayOutputManager").newInstance();
+        } catch (Exception e) {
+            // no handle
+        }
+        if (rkDisplayOutputManager != null) {
+            int result = (Integer) ReflectUtils.invokeMethodNoParameter(rkDisplayOutputManager, "saveConfig");
+        }
+    }
+
+    public static void updateDisplayInfos() {
+        Object rkDisplayOutputManager = null;
+        try {
+            rkDisplayOutputManager = Class.forName("android.os.RkDisplayOutputManager").newInstance();
+        } catch (Exception e) {
+            // no handle
+        }
+        if (rkDisplayOutputManager != null) {
+            logd("updateDisplayInfos");
+            int result = (Integer) ReflectUtils.invokeMethodNoParameter(rkDisplayOutputManager, "updateDisplayInfos");
+        }
+    }
+
+    public static void confirmSaveDisplayMode(DisplayInfo di, boolean isSave) {
+        if (di == null) {
+            return;
+        }
+        if (di.getDisplayId() == DISPLAY_TYPE_MAIN) {
+            confirmSaveMainMode(isSave);
+        } else if (di.getDisplayId() == DISPLAY_TYPE_AUX) {
+            confirmSaveAuxMode(isSave);
+        }
+        saveConfig();
+    }
+
+    private static String tmpSetMainMode = null;
+    private static String curSetMainMode = "Auto";
+
+    public static DisplayInfo getDisplayInfo(int displayId) {
+        if (DISPLAY_TYPE_MAIN == displayId) {
+            return getMainDisplayInfo();
+        } else if (DISPLAY_TYPE_AUX == displayId) {
+            return getAuxDisplayInfo();
+        }
+        return null;
+    }
+
+    public static DisplayInfo getMainDisplayInfo() {
+        Object rkDisplayOutputManager = null;
+        try {
+            rkDisplayOutputManager = Class.forName("android.os.RkDisplayOutputManager").newInstance();
+            logd("getDisplayInfoList->rkDisplayOutputManager->name:" + rkDisplayOutputManager.getClass().getName());
+        } catch (Exception e) {
+        }
+        if (rkDisplayOutputManager == null)
+            return null;
+        logd(" getMainDisplayInfo 1");
+        int[] mainTypes = (int[]) ReflectUtils.invokeMethod(rkDisplayOutputManager, "getIfaceList", new Class[]{int.class}, new Object[]{DISPLAY_TYPE_MAIN});
+        logd(" getMainDisplayInfo 2");
+        if (mainTypes != null && mainTypes.length > 0) {
+            int currMainType = (Integer) ReflectUtils.invokeMethod(rkDisplayOutputManager, "getCurrentInterface", new Class[]{int.class}, new Object[]{DISPLAY_TYPE_MAIN});
+            DisplayInfo displayInfo = new DisplayInfo();
+            displayInfo.setDisplayId(DISPLAY_TYPE_MAIN);
+            logd(" getMainDisplayInfo 3");
+            displayInfo.setDescription((String) ReflectUtils.invokeMethod(rkDisplayOutputManager, "typetoface", new Class[]{int.class}, new Object[]{currMainType}));
+            logd(" getMainDisplayInfo 4");
+            displayInfo.setType(currMainType);
+            String[] orginModes = (String[]) ReflectUtils.invokeMethod(rkDisplayOutputManager, "getModeList", new Class[]{int.class, int.class}, new Object[]{DISPLAY_TYPE_MAIN, currMainType});
+            orginModes = filterOrginModes(orginModes);
+            displayInfo.setOrginModes(orginModes);
+            displayInfo.setModes(getFilterModeList(orginModes));
+            logd(" getMainDisplayInfo 5");
+            return displayInfo;
+        }
+        return null;
+    }
+
+    private static String getMainMode() {
+        Object rkDisplayOutputManager = null;
+        try {
+            rkDisplayOutputManager = Class.forName("android.os.RkDisplayOutputManager").newInstance();
+            logd("getDisplayInfoList->rkDisplayOutputManager->name:" + rkDisplayOutputManager.getClass().getName());
+        } catch (Exception e) {
+            // no handle
+        }
+        if (rkDisplayOutputManager == null)
+            return null;
+        logd(" getMainMode 1");
+        int[] mainTypes = (int[]) ReflectUtils.invokeMethod(rkDisplayOutputManager, "getIfaceList", new Class[]{int.class}, new Object[]{DISPLAY_TYPE_MAIN});
+        logd(" getMainMode 2");
+        if (mainTypes != null && mainTypes.length > 0) {
+            int currMainType = (Integer) ReflectUtils.invokeMethod(rkDisplayOutputManager, "getCurrentInterface", new Class[]{int.class}, new Object[]{DISPLAY_TYPE_MAIN});
+            return (String) ReflectUtils.invokeMethod(rkDisplayOutputManager, "getCurrentMode", new Class[]{int.class, int.class}, new Object[]{DISPLAY_TYPE_MAIN, currMainType});
+        }
+        return null;
+    }
+
+    private static void setMainModeTemp(String mode) {
+        setMainMode(mode);
+        tmpSetMainMode = mode;
+    }
+
+    private static void confirmSaveMainMode(boolean isSave) {
+        if (tmpSetMainMode == null) {
+            return;
+        }
+        if (isSave) {
+            curSetMainMode = tmpSetMainMode;
+        } else {
+            setMainMode(curSetMainMode);
+            tmpSetMainMode = null;
+        }
+    }
+
+    private static void setMainMode(String mode) {
+        Object rkDisplayOutputManager = null;
+        try {
+            rkDisplayOutputManager = Class.forName("android.os.RkDisplayOutputManager").newInstance();
+            logd("getDisplayInfoList->rkDisplayOutputManager->name:" + rkDisplayOutputManager.getClass().getName());
+        } catch (Exception e) {
+        }
+        if (rkDisplayOutputManager == null)
+            return;
+        logd(" setMainMode 1");
+        int[] mainTypes = (int[]) ReflectUtils.invokeMethod(rkDisplayOutputManager, "getIfaceList", new Class[]{int.class}, new Object[]{DISPLAY_TYPE_MAIN});
+        logd(" setMainMode 2");
+        if (mainTypes != null && mainTypes.length > 0) {
+            logd(" setMainMode mode = " + mode);
+            int currMainType = (Integer) ReflectUtils.invokeMethod(rkDisplayOutputManager, "getCurrentInterface", new Class[]{int.class}, new Object[]{DISPLAY_TYPE_MAIN});
+            ReflectUtils.invokeMethod(rkDisplayOutputManager, "setMode", new Class[]{int.class, int.class, String.class}, new Object[]{DISPLAY_TYPE_MAIN, currMainType, mode});
+        }
+        logd(" setMainMode 3");
+    }
+
+    private static String tmpSetAuxMode = null;
+    private static String curSetAuxMode = "1920x1080p60";
+
+    public static DisplayInfo getAuxDisplayInfo() {
+        Object rkDisplayOutputManager = null;
+        try {
+            rkDisplayOutputManager = Class.forName("android.os.RkDisplayOutputManager").newInstance();
+            logd("getDisplayInfoList->rkDisplayOutputManager->name:" + rkDisplayOutputManager.getClass().getName());
+        } catch (Exception e) {
+        }
+        logd(" getAuxDisplayInfo 1");
+        int[] externalTypes = (int[]) ReflectUtils.invokeMethod(rkDisplayOutputManager, "getIfaceList", new Class[]{int.class}, new Object[]{DISPLAY_TYPE_AUX});
+        logd(" getAuxDisplayInfo 2");
+        if (externalTypes != null && externalTypes.length > 0) {
+            int currMainType = (Integer) ReflectUtils.invokeMethod(rkDisplayOutputManager, "getCurrentInterface", new Class[]{int.class}, new Object[]{DISPLAY_TYPE_AUX});
+            DisplayInfo displayInfo = new DisplayInfo();
+            displayInfo.setDisplayId(DISPLAY_TYPE_AUX);
+            logd(" getAuxDisplayInfo 3");
+            displayInfo.setDescription((String) ReflectUtils.invokeMethod(rkDisplayOutputManager, "typetoface", new Class[]{int.class}, new Object[]{currMainType}));
+            logd(" getAuxDisplayInfo 4");
+            displayInfo.setType(currMainType);
+            String[] orginModes = (String[]) ReflectUtils.invokeMethod(rkDisplayOutputManager, "getModeList", new Class[]{int.class, int.class}, new Object[]{DISPLAY_TYPE_AUX, currMainType});
+            orginModes = filterOrginModes(orginModes);
+            displayInfo.setOrginModes(orginModes);
+            displayInfo.setModes(getFilterModeList(orginModes));
+            logd(" getAuxDisplayInfo 5");
+            return displayInfo;
+        }
+        return null;
+    }
+
+    private static String getAuxMode() {
+        Object rkDisplayOutputManager = null;
+        try {
+            rkDisplayOutputManager = Class.forName("android.os.RkDisplayOutputManager").newInstance();
+            logd("getDisplayInfoList->rkDisplayOutputManager->name:" + rkDisplayOutputManager.getClass().getName());
+        } catch (Exception e) {
+            // no handle
+        }
+        if (rkDisplayOutputManager == null)
+            return null;
+        logd(" getAuxMode 1");
+        int[] mainTypes = (int[]) ReflectUtils.invokeMethod(rkDisplayOutputManager, "getIfaceList", new Class[]{int.class}, new Object[]{DISPLAY_TYPE_AUX});
+        logd(" getAuxMode 2");
+        if (mainTypes != null && mainTypes.length > 0) {
+            int currMainType = (Integer) ReflectUtils.invokeMethod(rkDisplayOutputManager, "getCurrentInterface", new Class[]{int.class}, new Object[]{DISPLAY_TYPE_AUX});
+            return (String) ReflectUtils.invokeMethod(rkDisplayOutputManager, "getCurrentMode", new Class[]{int.class, int.class}, new Object[]{DISPLAY_TYPE_AUX, currMainType});
+        }
+        return null;
+    }
+
+    private static void setAuxModeTemp(String reso) {
+        setAuxMode(reso);
+        tmpSetAuxMode = reso;
+    }
+
+    private static void confirmSaveAuxMode(boolean isSave) {
+        if (tmpSetAuxMode == null) {
+            return;
+        }
+        if (isSave) {
+            curSetAuxMode = tmpSetAuxMode;
+        } else {
+            setAuxMode(curSetAuxMode);
+            tmpSetAuxMode = null;
+        }
+    }
+
+    private static void setAuxMode(String reso) {
+        Object rkDisplayOutputManager = null;
+        try {
+            rkDisplayOutputManager = Class.forName("android.os.RkDisplayOutputManager").newInstance();
+            logd("getDisplayInfoList->rkDisplayOutputManager->name:" + rkDisplayOutputManager.getClass().getName());
+        } catch (Exception e) {
+        }
+        if (rkDisplayOutputManager == null)
+            return;
+        logd(" setAuxMode 1");
+        int[] mainTypes = (int[]) ReflectUtils.invokeMethod(rkDisplayOutputManager, "getIfaceList", new Class[]{int.class}, new Object[]{DISPLAY_TYPE_AUX});
+        logd(" setAuxMode 2");
+        if (mainTypes != null && mainTypes.length > 0) {
+            int currMainType = (Integer) ReflectUtils.invokeMethod(rkDisplayOutputManager, "getCurrentInterface", new Class[]{int.class}, new Object[]{DISPLAY_TYPE_AUX});
+            ReflectUtils.invokeMethod(rkDisplayOutputManager, "setMode", new Class[]{int.class, int.class, String.class}, new Object[]{DISPLAY_TYPE_AUX, currMainType, reso});
+        }
+    }
+
+    private static String[] filterOrginModes(String[] modes) {
+        if (modes == null)
+            return null;
+        List<String> filterModeList = new ArrayList<String>();
+        List<String> resModeList = new ArrayList<String>();
+        for (int i = 0; i < modes.length; ++i) {
+            logd("filterOrginModes->mode:" + modes[i]);
+            String itemMode = modes[i];
+            int endIndex = itemMode.indexOf("-");
+            if (endIndex > 0)
+                itemMode = itemMode.substring(0, endIndex);
+            if (!resModeList.contains(itemMode)) {
+                resModeList.add(itemMode);
+                if (!filterModeList.contains(modes[i]))
+                    filterModeList.add(modes[i]);
+            }
+        }
+        return filterModeList.toArray(new String[0]);
+    }
+
+    private static String[] getFilterModeList(String[] modes) {
+        if (modes == null)
+            return null;
+        String[] filterModes = new String[modes.length];
+        for (int i = 0; i < modes.length; ++i) {
+            String itemMode = modes[i];
+            int endIndex = itemMode.indexOf("-");
+            if (endIndex > 0)
+                itemMode = itemMode.substring(0, endIndex);
+            filterModes[i] = itemMode;
+        }
+        return filterModes;
+    }
+}
diff --git a/src/com/android/settings/display/HdmiSettings.java b/src/com/android/settings/display/HdmiSettings.java
new file mode 100644
index 0000000000..f35ee2d15b
--- /dev/null
+++ b/src/com/android/settings/display/HdmiSettings.java
@@ -0,0 +1,585 @@
+package com.android.settings.display;
+
+import android.content.BroadcastReceiver;
+import android.content.Context;
+import android.content.Intent;
+import android.content.IntentFilter;
+import android.hardware.display.DisplayManager;
+import android.os.Bundle;
+import android.os.Handler;
+import android.os.ServiceManager;
+import android.os.SystemProperties;
+import android.preference.Preference.OnPreferenceChangeListener;
+import android.util.Log;
+import android.view.IWindowManager;
+import android.view.LayoutInflater;
+import android.view.Surface;
+import android.view.View;
+import android.view.ViewGroup;
+
+import androidx.fragment.app.DialogFragment;
+import androidx.preference.CheckBoxPreference;
+import androidx.preference.ListPreference;
+import androidx.preference.Preference;
+import androidx.preference.SwitchPreference;
+import androidx.preference.PreferenceCategory;
+import androidx.preference.PreferenceScreen;
+
+import com.android.internal.logging.nano.MetricsProto.MetricsEvent;
+import com.android.settings.R;
+import com.android.settings.SettingsPreferenceFragment;
+
+import static com.android.settings.display.HdmiSettings.DISPLAY_SHOW_SETTINGS.DOUBLE_SHOW;
+import static com.android.settings.display.HdmiSettings.DISPLAY_SHOW_SETTINGS.ONLY_SHOW_AUX;
+import static com.android.settings.display.HdmiSettings.DISPLAY_SHOW_SETTINGS.ONLY_SHOW_MAIN;
+
+public class HdmiSettings extends SettingsPreferenceFragment
+        implements Preference.OnPreferenceChangeListener,
+        Preference.OnPreferenceClickListener {
+    /**
+     * Called when the activity is first created.
+     */
+    private static final String TAG = "HdmiSettings";
+    private static final String KEY_SYSTEM_ROTATION = "system_rotation";
+    private static final String KEY_MAIN_CATEGORY = "main_category";
+    private static final String KEY_MAIN_SWITCH = "main_switch";
+    private static final String KEY_MAIN_RESOLUTION = "main_resolution";
+    private static final String KEY_MAIN_SCALE = "main_screen_scale";
+    private static final String KEY_AUX_CATEGORY = "aux_category";
+    private static final String KEY_AUX_SWITCH = "aux_switch";
+    private static final String KEY_AUX_RESOLUTION = "aux_resolution";
+    private static final String KEY_AUX_SCALE = "aux_screen_scale";
+    private static final String KEY_AUX_SCREEN_VH = "aux_screen_vh";
+    private static final String KEY_AUX_SCREEN_VH_LIST = "aux_screen_vhlist";
+    private static final String SYS_HDMI_STATE = "sys.hdmi_status.aux";
+    private static final String SYS_DP_STATE = "sys.dp_status.aux";
+    /**
+     * TODO
+     * 目前hwc只配置了hdmi和dp的开关，如果是其他的设备，需要配合修改，才能进行开关
+     * sys.hdmi_status.aux：/sys/devices/platform/display-subsystem/drm/card0/card0-HDMI-A-1/status
+     * sys.hdmi_status.aux：/sys/devices/platform/display-subsystem/drm/card0/card0-DP-1/status
+     */
+    private String sys_main_state = SYS_HDMI_STATE;
+    private String sys_aux_state = SYS_DP_STATE;
+
+    private ListPreference mSystemRotation;
+    private PreferenceCategory mMainCategory;
+    private SwitchPreference mMainSwitch;
+    private ListPreference mMainResolution;
+    private Preference mMainScale;
+    private PreferenceCategory mAuxCategory;
+    private SwitchPreference mAuxSwitch;
+    private ListPreference mAuxResolution;
+    private Preference mAuxScale;
+    private CheckBoxPreference mAuxScreenVH;
+    private ListPreference mAuxScreenVHList;
+    private Context context;
+    private String mOldMainResolution;
+    private String mOldAuxResolution;
+    protected DisplayInfo mMainDisplayInfo;
+    protected DisplayInfo mAuxDisplayInfo;
+    private DisplayManager mDisplayManager;
+    private DisplayListener mDisplayListener;
+    private IWindowManager mWindowManager;
+    private DISPLAY_SHOW_SETTINGS mShowSettings = ONLY_SHOW_AUX;
+
+    enum DISPLAY_SHOW_SETTINGS {
+        ONLY_SHOW_MAIN,
+        ONLY_SHOW_AUX,
+        DOUBLE_SHOW
+    }
+
+    private final BroadcastReceiver HdmiListener = new BroadcastReceiver() {
+        @Override
+        public void onReceive(Context ctxt, Intent receivedIt) {
+            String action = receivedIt.getAction();
+            String HDMIINTENT = "android.intent.action.HDMI_PLUGGED";
+            if (action.equals(HDMIINTENT)) {
+                boolean state = receivedIt.getBooleanExtra("state", false);
+                if (state) {
+                    Log.d(TAG, "BroadcastReceiver.onReceive() : Connected HDMI-TV");
+                } else {
+                    Log.d(TAG, "BroadcastReceiver.onReceive() : Disconnected HDMI-TV");
+                }
+            }
+        }
+    };
+
+    @Override
+    public int getMetricsCategory() {
+        return MetricsEvent.DISPLAY;
+    }
+
+    @Override
+    public void onCreate(Bundle savedInstanceState) {
+        super.onCreate(savedInstanceState);
+        context = getActivity();
+        mDisplayManager = (DisplayManager) context.getSystemService(Context.DISPLAY_SERVICE);
+        mWindowManager = IWindowManager.Stub.asInterface(
+                ServiceManager.getService(Context.WINDOW_SERVICE));
+        mDisplayListener = new DisplayListener();
+        addPreferencesFromResource(R.xml.hdmi_settings);
+        int value = SystemProperties.getInt("persist.vendor.sys.hdmiui", 0);
+        String currentMainConfig = SystemProperties.get("vendor.hwc.device.primary");
+        boolean hasMainDisplay = false;
+        if (null != currentMainConfig) {
+            currentMainConfig = currentMainConfig.replaceAll("eDP", "");
+            hasMainDisplay = currentMainConfig.contains("HDMI")
+                    || currentMainConfig.contains("DP");
+        }
+        String currentAuxConfig = SystemProperties.get("vendor.hwc.device.extend");
+        boolean hasAuxDisplay = false;
+        if (null != currentAuxConfig) {
+            currentAuxConfig = currentAuxConfig.replaceAll("eDP", "");
+            hasAuxDisplay = currentAuxConfig.contains("HDMI")
+                || currentAuxConfig.contains("DP");
+        }
+
+        if (hasMainDisplay) {
+            value = hasAuxDisplay ? 2 : 1;
+        }
+        Log.d(TAG, "primary=" + currentMainConfig + ", extend=" + currentAuxConfig
+                + ", hasMain=" + hasMainDisplay + ", hasAux=" + hasAuxDisplay
+                + ", value=" + value);
+        switch (value) {
+            case 0: {
+                mShowSettings = ONLY_SHOW_AUX;
+                sys_aux_state = SYS_HDMI_STATE;
+                break;
+            }
+            case 1: {
+                mShowSettings = ONLY_SHOW_MAIN;
+                sys_main_state = SYS_HDMI_STATE;
+                break;
+            }
+            default: {
+                mShowSettings = DOUBLE_SHOW;
+                String primary = SystemProperties.get("vendor.hwc.device.primary", "");
+                String extend = SystemProperties.get("vendor.hwc.device.extend", "");
+                if (primary.contains("HDMI")) {//配置hdmi为主显
+                    sys_main_state = SYS_HDMI_STATE;
+                    sys_aux_state = SYS_DP_STATE;
+                } else if (extend.contains("HDMI")) {//主显不配hdmi,副显配置hdmi
+                    sys_aux_state = SYS_HDMI_STATE;
+                    sys_main_state = SYS_DP_STATE;
+                }
+                break;
+            }
+        }
+        init();
+        Log.d(TAG, "---------onCreate---------------------");
+    }
+
+
+    @Override
+    public View onCreateView(LayoutInflater inflater, ViewGroup container,
+                             Bundle savedInstanceState) {
+        Log.d(TAG, "onCreateView----------------------------------------");
+        return super.onCreateView(inflater, container, savedInstanceState);
+    }
+
+    @Override
+    public void onResume() {
+        super.onResume();
+        IntentFilter filter = new IntentFilter("android.intent.action.HDMI_PLUGGED");
+        getContext().registerReceiver(HdmiListener, filter);
+        refreshState();
+        mDisplayManager.registerDisplayListener(mDisplayListener, null);
+    }
+
+    public void onPause() {
+        super.onPause();
+        Log.d(TAG, "onPause----------------");
+        mDisplayManager.unregisterDisplayListener(mDisplayListener);
+        getContext().unregisterReceiver(HdmiListener);
+    }
+
+    public void onDestroy() {
+        super.onDestroy();
+        Log.d(TAG, "onDestroy----------------");
+    }
+
+    private void init() {
+        //boolean showSystemRotation = mShowSettings != DISPLAY_SHOW_SETTINGS.ONLY_SHOW_AUX;
+        boolean showSystemRotation = false;
+        if (showSystemRotation) {
+            mSystemRotation = (ListPreference) findPreference(KEY_SYSTEM_ROTATION);
+            mSystemRotation.setOnPreferenceChangeListener(this);
+            try {
+                int rotation = mWindowManager.getDefaultDisplayRotation();
+                switch (rotation) {
+                    case Surface.ROTATION_0:
+                        mSystemRotation.setValue("0");
+                        break;
+                    case Surface.ROTATION_90:
+                        mSystemRotation.setValue("90");
+                        break;
+                    case Surface.ROTATION_180:
+                        mSystemRotation.setValue("180");
+                        break;
+                    case Surface.ROTATION_270:
+                        mSystemRotation.setValue("270");
+                        break;
+                    default:
+                        mSystemRotation.setValue("0");
+                }
+            } catch (Exception e) {
+                Log.e(TAG, e.toString());
+            }
+        } else {
+            removePreference(KEY_SYSTEM_ROTATION);
+        }
+        //main
+        if (mShowSettings != ONLY_SHOW_AUX) {
+            mMainDisplayInfo = getDisplayInfo(0);
+            //restore main switch value
+            mMainCategory = (PreferenceCategory) findPreference(KEY_MAIN_CATEGORY);
+            if (mShowSettings == DOUBLE_SHOW) {
+                mMainCategory.setTitle(R.string.screen_main_title);
+            }
+            String switchState = SystemProperties.get(sys_main_state, "on");
+            mMainSwitch = (SwitchPreference) findPreference(KEY_MAIN_SWITCH);
+            if ("on".equals(switchState)) {
+                mMainSwitch.setChecked(true);
+            } else {
+                mMainSwitch.setChecked(false);
+            }
+            mMainSwitch.setOnPreferenceChangeListener(this);
+            mMainCategory.removePreference(mMainSwitch);
+            mMainResolution = (ListPreference) findPreference(KEY_MAIN_RESOLUTION);
+            mMainResolution.setOnPreferenceChangeListener(this);
+            mMainResolution.setOnPreferenceClickListener(this);
+            if (mMainDisplayInfo != null) {
+                mMainResolution.setEntries(DrmDisplaySetting.getDisplayModes(mMainDisplayInfo).toArray(new String[0]));
+                mMainResolution.setEntryValues(DrmDisplaySetting.getDisplayModes(mMainDisplayInfo).toArray(new String[0]));
+            }
+            mMainScale = findPreference(KEY_MAIN_SCALE);
+            mMainScale.setOnPreferenceClickListener(this);
+            mMainCategory.removePreference(mMainScale);
+            //mMainCategory.removePreference(mMainSwitch);
+        } else {
+            removePreference(KEY_MAIN_CATEGORY);
+        }
+
+
+        //aux
+        if (mShowSettings != ONLY_SHOW_MAIN) {
+            mAuxDisplayInfo = getDisplayInfo(1);
+            mAuxCategory = (PreferenceCategory) findPreference(KEY_AUX_CATEGORY);
+            if (mShowSettings == DOUBLE_SHOW) {
+                mAuxCategory.setTitle(R.string.screen_aux_title);
+            }
+            mAuxSwitch = (SwitchPreference) findPreference(KEY_AUX_SWITCH);
+            String switchState = SystemProperties.get(sys_aux_state, "on");
+            if ("on".equals(switchState)) {
+                mAuxSwitch.setChecked(true);
+            } else {
+                mAuxSwitch.setChecked(false);
+            }
+            mAuxSwitch.setOnPreferenceChangeListener(this);
+            mAuxCategory.removePreference(mAuxSwitch);
+            mAuxResolution = (ListPreference) findPreference(KEY_AUX_RESOLUTION);
+            mAuxResolution.setOnPreferenceChangeListener(this);
+            mAuxResolution.setOnPreferenceClickListener(this);
+            if (mAuxDisplayInfo != null) {
+                mAuxResolution.setEntries(DrmDisplaySetting.getDisplayModes(mAuxDisplayInfo).toArray(new String[0]));
+                mAuxResolution.setEntryValues(DrmDisplaySetting.getDisplayModes(mAuxDisplayInfo).toArray(new String[0]));
+            }
+            mAuxScale = findPreference(KEY_AUX_SCALE);
+            mAuxScale.setOnPreferenceClickListener(this);
+            mAuxCategory.removePreference(mAuxScale);
+
+            mAuxScreenVH = (CheckBoxPreference) findPreference(KEY_AUX_SCREEN_VH);
+            mAuxScreenVH.setChecked(SystemProperties.getBoolean("persist.sys.rotation.efull", false));
+            mAuxScreenVH.setOnPreferenceChangeListener(this);
+            mAuxCategory.removePreference(mAuxScreenVH);
+            mAuxScreenVHList = (ListPreference) findPreference(KEY_AUX_SCREEN_VH_LIST);
+            mAuxScreenVHList.setOnPreferenceChangeListener(this);
+            mAuxScreenVHList.setOnPreferenceClickListener(this);
+            mAuxCategory.removePreference(mAuxScreenVHList);
+        } else {
+            removePreference(KEY_AUX_CATEGORY);
+        }
+    }
+
+    protected DisplayInfo getDisplayInfo(int displayId) {
+        DrmDisplaySetting.updateDisplayInfos();
+        return DrmDisplaySetting.getDisplayInfo(displayId);
+    }
+
+    /**
+     * 获取当前分辨率值
+     */
+    public void updateMainResolutionValue() {
+        String resolutionValue = null;
+        mMainDisplayInfo = getDisplayInfo(0);
+        if (mMainDisplayInfo != null) {
+            resolutionValue = DrmDisplaySetting.getCurDisplayMode(mMainDisplayInfo);
+        }
+        Log.i(TAG, "main resolutionValue:" + resolutionValue);
+        mOldMainResolution = resolutionValue;
+        if (resolutionValue != null) {
+            mMainResolution.setValue(resolutionValue);
+        }
+    }
+
+    public void updateAuxResolutionValue() {
+        String resolutionValue = null;
+        mAuxDisplayInfo = getDisplayInfo(1);
+        if (mAuxDisplayInfo != null) {
+            resolutionValue = DrmDisplaySetting.getCurDisplayMode(mAuxDisplayInfo);
+        }
+        Log.i(TAG, "aux resolutionValue:" + resolutionValue);
+        mOldAuxResolution = resolutionValue;
+        if (resolutionValue != null) {
+            mAuxResolution.setValue(resolutionValue);
+        }
+    }
+
+    private void updateMainState() {
+//        Display[] allDisplays = mDisplayManager.getDisplays();
+//        String switchValue = SystemProperties.get("sys.hdmi_status.aux", "on");
+//        if (allDisplays == null || allDisplays.length < 2 || switchValue.equals("off")) {
+//            mHdmiResolution.setEnabled(false);
+//            mHdmiScale.setEnabled(false);
+//            mHdmiRotation.setEnabled(false);
+//        } else {
+        new Handler().postDelayed(new Runnable() {
+            public void run() {
+                mMainDisplayInfo = getDisplayInfo(0);
+                //增加延迟，保证数据能够拿到
+                if (mMainDisplayInfo != null) {
+                    mMainResolution.setEntries(DrmDisplaySetting.getDisplayModes(mMainDisplayInfo).toArray(new String[0]));
+                    mMainResolution.setEntryValues(DrmDisplaySetting.getDisplayModes(mMainDisplayInfo).toArray(new String[0]));
+                    updateMainResolutionValue();
+                    mMainResolution.setEnabled(true);
+                    mMainScale.setEnabled(true);
+                } else {
+                    mMainResolution.setEnabled(false);
+                    mMainScale.setEnabled(false);
+                }
+
+            }
+        }, 1000);
+    }
+
+    private void updateAuxState() {
+//        Display[] allDisplays = mDisplayManager.getDisplays();
+//        String switchValue = SystemProperties.get("sys.hdmi_status.aux", "on");
+//        if (allDisplays == null || allDisplays.length < 2 || switchValue.equals("off")) {
+//            mHdmiResolution.setEnabled(false);
+//            mHdmiScale.setEnabled(false);
+//            mHdmiRotation.setEnabled(false);
+//        } else {
+        new Handler().postDelayed(new Runnable() {
+            public void run() {
+                mAuxDisplayInfo = getDisplayInfo(1);
+                //增加延迟，保证数据能够拿到
+                if (mAuxDisplayInfo != null) {
+                    mAuxResolution.setEntries(DrmDisplaySetting.getDisplayModes(mAuxDisplayInfo).toArray(new String[0]));
+                    mAuxResolution.setEntryValues(DrmDisplaySetting.getDisplayModes(mAuxDisplayInfo).toArray(new String[0]));
+                    updateAuxResolutionValue();
+                    mAuxResolution.setEnabled(true);
+                    mAuxScale.setEnabled(true);
+                    mAuxScreenVH.setEnabled(true);
+                    mAuxScreenVHList.setEnabled(true);
+                } else {
+                    mAuxResolution.setEnabled(false);
+                    mAuxScale.setEnabled(false);
+                    mAuxScreenVH.setEnabled(false);
+                    mAuxScreenVHList.setEnabled(false);
+                }
+            }
+        }, 1000);
+    }
+
+    protected void showConfirmSetMainModeDialog() {
+        mMainDisplayInfo = getDisplayInfo(0);
+        if (mMainDisplayInfo != null) {
+            DialogFragment df = ConfirmSetModeDialogFragment.newInstance(mMainDisplayInfo, new ConfirmSetModeDialogFragment.OnDialogDismissListener() {
+                @Override
+                public void onDismiss(boolean isok) {
+                    Log.i(TAG, "showConfirmSetModeDialog->onDismiss->isok:" + isok);
+                    Log.i(TAG, "showConfirmSetModeDialog->onDismiss->mOldResolution:" + mOldMainResolution);
+                    updateMainResolutionValue();
+                }
+            });
+            df.show(getFragmentManager(), "ConfirmDialog");
+        }
+    }
+
+    protected void showConfirmSetAuxModeDialog() {
+        mAuxDisplayInfo = getDisplayInfo(1);
+        if (mAuxDisplayInfo != null) {
+            DialogFragment df = ConfirmSetModeDialogFragment.newInstance(mAuxDisplayInfo, new ConfirmSetModeDialogFragment.OnDialogDismissListener() {
+                @Override
+                public void onDismiss(boolean isok) {
+                    Log.i(TAG, "showConfirmSetModeDialog->onDismiss->isok:" + isok);
+                    Log.i(TAG, "showConfirmSetModeDialog->onDismiss->mOldAuxResolution:" + mOldAuxResolution);
+                    updateAuxResolutionValue();
+                }
+            });
+            df.show(getFragmentManager(), "ConfirmDialog");
+        }
+    }
+
+    @Override
+    public boolean onPreferenceTreeClick(Preference preference) {
+        // TODO Auto-generated method stub
+        return true;
+    }
+
+    @Override
+    public boolean onPreferenceClick(Preference preference) {
+        if (preference == mMainScale) {
+            Intent screenScaleIntent = new Intent(getActivity(), ScreenScaleActivity.class);
+            mMainDisplayInfo = getDisplayInfo(0);
+            if (mMainDisplayInfo != null) {
+                screenScaleIntent.putExtra(ScreenScaleActivity.EXTRA_DISPLAY_INFO, mMainDisplayInfo);
+                startActivity(screenScaleIntent);
+            }
+        } else if (preference == mMainResolution) {
+            updateMainState();
+        } else if (preference == mAuxScreenVHList) {
+            String value = SystemProperties.get("persist.sys.rotation.einit", "0");
+            mAuxScreenVHList.setValue(value);
+        } else if (preference == mAuxScale) {
+            Intent screenScaleIntent = new Intent(getActivity(), ScreenScaleActivity.class);
+            mAuxDisplayInfo = getDisplayInfo(1);
+            if (mAuxDisplayInfo != null) {
+                screenScaleIntent.putExtra(ScreenScaleActivity.EXTRA_DISPLAY_INFO, mAuxDisplayInfo);
+                startActivity(screenScaleIntent);
+            }
+        } else if (preference == mAuxResolution) {
+            updateAuxState();
+        }
+        return true;
+    }
+
+    @Override
+    public boolean onPreferenceChange(Preference preference, Object obj) {
+        Log.i(TAG, "onPreferenceChange:" + obj);
+        String key = preference.getKey();
+        Log.d(TAG, key);
+        if (preference == mMainResolution) {
+            if (KEY_MAIN_RESOLUTION.equals(key)) {
+                if (obj.equals(mOldMainResolution))
+                    return true;
+                int index = mMainResolution.findIndexOfValue((String) obj);
+                Log.i(TAG, "onMainPreferenceChange: index= " + index);
+                mMainDisplayInfo = getDisplayInfo(0);
+                if (mMainDisplayInfo != null) {
+                    DrmDisplaySetting.setDisplayModeTemp(mMainDisplayInfo, index);
+                    showConfirmSetMainModeDialog();
+                }
+            }
+        } else if (preference == mAuxResolution) {
+            if (KEY_AUX_RESOLUTION.equals(key)) {
+                if (obj.equals(mOldAuxResolution))
+                    return true;
+                int index = mAuxResolution.findIndexOfValue((String) obj);
+                Log.i(TAG, "onAuxPreferenceChange: index= " + index);
+                mAuxDisplayInfo = getDisplayInfo(1);
+                if (mAuxDisplayInfo != null) {
+                    DrmDisplaySetting.setDisplayModeTemp(mAuxDisplayInfo, index);
+                    showConfirmSetAuxModeDialog();
+                }
+            }
+        } else if (KEY_MAIN_SWITCH.equals(key)) {
+            if (Boolean.parseBoolean(obj.toString())) {
+                SystemProperties.set(sys_main_state, "on");
+            } else {
+                SystemProperties.set(sys_main_state, "off");
+            }
+            updateMainState();
+        } else if (KEY_AUX_SWITCH.equals(key)) {
+            if (Boolean.parseBoolean(obj.toString())) {
+                SystemProperties.set(sys_aux_state, "on");
+            } else {
+                SystemProperties.set(sys_aux_state, "off");
+            }
+            updateAuxState();
+        } else if (preference == mSystemRotation) {
+            if (KEY_SYSTEM_ROTATION.equals(key)) {
+                try {
+                    int value = Integer.parseInt((String) obj);
+                    android.os.SystemProperties.set("persist.sys.orientation", (String) obj);
+                    Log.d(TAG, "freezeRotation~~~value:" + (String) obj);
+                    if (value == 0) {
+                        mWindowManager.freezeRotation(Surface.ROTATION_0);
+                    } else if (value == 90) {
+                        mWindowManager.freezeRotation(Surface.ROTATION_90);
+                    } else if (value == 180) {
+                        mWindowManager.freezeRotation(Surface.ROTATION_180);
+                    } else if (value == 270) {
+                        mWindowManager.freezeRotation(Surface.ROTATION_270);
+                    } else {
+                        return true;
+                    }
+                    //android.os.SystemProperties.set("sys.boot_completed", "1");
+                } catch (Exception e) {
+                    Log.e(TAG, "freezeRotation error");
+                }
+            }
+        } else if (preference == mAuxScreenVH) {
+            if ((Boolean) obj) {
+                SystemProperties.set("persist.sys.rotation.efull", "true");
+            } else {
+                SystemProperties.set("persist.sys.rotation.efull", "false");
+            }
+            SystemProperties.set(sys_aux_state, "off");
+            mAuxSwitch.setEnabled(false);
+            new Handler().postDelayed(new Runnable() {
+                @Override
+                public void run() {
+                    SystemProperties.set(sys_aux_state, "on");
+                    mAuxSwitch.setEnabled(true);
+                }
+            }, 500);
+        } else if (preference == mAuxScreenVHList) {
+            SystemProperties.set("persist.sys.rotation.einit", obj.toString());
+            //mDisplayManager.forceScheduleTraversalLocked();
+            SystemProperties.set(sys_aux_state, "off");
+            mAuxSwitch.setEnabled(false);
+            new Handler().postDelayed(new Runnable() {
+                @Override
+                public void run() {
+                    SystemProperties.set(sys_aux_state, "on");
+                    mAuxSwitch.setEnabled(true);
+                }
+            }, 500);
+
+        }
+        return true;
+    }
+
+    public static boolean isAvailable() {
+        return "true".equals(SystemProperties.get("ro.vendor.hdmi_settings"));
+    }
+
+    private void refreshState() {
+        if (mShowSettings != ONLY_SHOW_AUX) {
+            updateMainState();
+        }
+        if (mShowSettings != ONLY_SHOW_MAIN) {
+            updateAuxState();
+        }
+    }
+
+    class DisplayListener implements DisplayManager.DisplayListener {
+        @Override
+        public void onDisplayAdded(int displayId) {
+            refreshState();
+        }
+
+        @Override
+        public void onDisplayChanged(int displayId) {
+            refreshState();
+        }
+
+        @Override
+        public void onDisplayRemoved(int displayId) {
+            refreshState();
+        }
+    }
+}
diff --git a/src/com/android/settings/display/HdmiSettingsPreferenceController.java b/src/com/android/settings/display/HdmiSettingsPreferenceController.java
new file mode 100644
index 0000000000..b280e48f4c
--- /dev/null
+++ b/src/com/android/settings/display/HdmiSettingsPreferenceController.java
@@ -0,0 +1,44 @@
+/*
+ * Copyright (C) 2016 The Android Open Source Project
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file
+ * except in compliance with the License. You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software distributed under the
+ * License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
+ * KIND, either express or implied. See the License for the specific language governing
+ * permissions and limitations under the License.
+ */
+package com.android.settings.display;
+
+import android.content.Context;
+import android.os.SystemProperties;
+import android.preference.Preference;
+
+import com.android.settings.R;
+import com.android.settings.core.PreferenceControllerMixin;
+import com.android.settingslib.core.AbstractPreferenceController;
+
+public class HdmiSettingsPreferenceController extends AbstractPreferenceController implements
+        PreferenceControllerMixin {
+
+    private final String mHdmiSettingsKey;
+
+    public HdmiSettingsPreferenceController(Context context, String key) {
+        super(context);
+        mHdmiSettingsKey = key;
+    }
+
+    @Override
+    public boolean isAvailable() {
+        return HdmiSettings.isAvailable();
+    }
+
+    @Override
+    public String getPreferenceKey() {
+        return mHdmiSettingsKey;
+    }
+
+}
diff --git a/src/com/android/settings/display/NodeDisplaySetting.java b/src/com/android/settings/display/NodeDisplaySetting.java
new file mode 100644
index 0000000000..7f55b4474b
--- /dev/null
+++ b/src/com/android/settings/display/NodeDisplaySetting.java
@@ -0,0 +1,136 @@
+package com.android.settings.display;
+
+import android.os.SystemProperties;
+import android.util.Log;
+
+import java.io.BufferedReader;
+import java.io.File;
+import java.io.FileInputStream;
+import java.io.IOException;
+import java.io.InputStreamReader;
+import java.util.ArrayList;
+import java.util.List;
+
+import com.android.settings.utils.ReflectUtils;
+
+/**
+ * Display Setting with node.
+ */
+
+public class NodeDisplaySetting {
+    private final static String TAG = "FbDisplaySetting";
+
+    private final static String SYS_NODE_PARAM_STATUS_OFF = "off";
+
+    private final static String SYS_NODE_PARAM_STATUS_ON = "detect";
+
+    private final static String SYS_NODE_STATUS_CONNECTED = "connected";
+
+    private final static String SYS_NODE_STATUS_DISCONNECTED = "disconnected";
+
+    private final static String SYS_NODE_HDMI_MODES =
+            "/sys/devices/platform/display-subsystem/drm/card0/card0-HDMI-A-1/modes";
+    private final static String SYS_NODE_HDMI_MODE =
+            "/sys/devices/platform/display-subsystem/drm/card0/card0-HDMI-A-1/mode";
+    private final static String SYS_NODE_HDMI_STATUS =
+            "/sys/devices/platform/display-subsystem/drm/card0/card0-HDMI-A-1/status";
+    private final static String PROP_RESOLUTION_HDMI = "persist.sys.resolution.aux";
+
+    private final static String SYS_NODE_DP_MODES =
+            "/sys/devices/platform/display-subsystem/drm/card0/card0-DP-1/modes";
+    private final static String SYS_NODE_DP_MODE =
+            "/sys/devices/platform/display-subsystem/drm/card0/card0-DP-1/mode";
+    private final static String SYS_NODE_DP_STATUS =
+            "/sys/devices/platform/display-subsystem/drm/card0/card0-DP-1/status";
+    private final static String PROP_RESOLUTION_DP = "persist.sys.resolution.aux";
+
+    private static void logd(String text) {
+        Log.d(TAG, TAG + " - " + text);
+    }
+
+    private static List<String> processModeStr(List<String> resoStrList) {
+        if (resoStrList == null) {
+            return null;
+        }
+        List<String> processedResoStrList = new ArrayList<>();
+        List<String> tmpResoStrList = new ArrayList<>();
+        for (String reso : resoStrList) {
+            if (reso.contains("p") || reso.contains("i")) {
+                boolean hasRepeat = false;
+                for (String s : tmpResoStrList) {
+                    if (s.equals(reso)) {
+                        hasRepeat = true;
+                        break;
+                    }
+                }
+                if (!hasRepeat) {
+                    tmpResoStrList.add(reso);
+                }
+            }
+        }
+        return tmpResoStrList;
+    }
+
+    private static String readStrFromFile(String filename) throws IOException {
+        logd("readStrFromFile - " + filename);
+        File f = new File(filename);
+        InputStreamReader reader = new InputStreamReader(new FileInputStream(f));
+        BufferedReader br = new BufferedReader(reader);
+        String line = br.readLine();
+        logd("readStrFromFile - " + line);
+        return line;
+    }
+
+    private static List<String> readStrListFromFile(String pathname) throws IOException {
+        List<String> fileStrings = new ArrayList<>();
+        File filename = new File(pathname);
+        InputStreamReader reader = new InputStreamReader(new FileInputStream(filename));
+        BufferedReader br = new BufferedReader(reader);
+        String line;
+        while ((line = br.readLine()) != null) {
+            fileStrings.add(line);
+        }
+        logd("readStrListFromFile - " + fileStrings.toString());
+        return fileStrings;
+    }
+
+    public static String getHdmiStatus() {
+        String status = null;
+        try {
+            status = readStrFromFile(SYS_NODE_HDMI_STATUS);
+        } catch (IOException e) {
+            e.printStackTrace();
+        }
+        return status;
+    }
+
+    private static List<String> getHdmiModes() {
+        List<String> res = null;
+        try {
+            res = readStrListFromFile(SYS_NODE_HDMI_MODES);
+        } catch (IOException e) {
+            e.printStackTrace();
+        }
+        return processModeStr(res);
+    }
+
+    private static String getDpStatus() {
+        String status = null;
+        try {
+            status = readStrFromFile(SYS_NODE_DP_STATUS);
+        } catch (IOException e) {
+            e.printStackTrace();
+        }
+        return status;
+    }
+
+    private static List<String> getDpModes() {
+        List<String> res = null;
+        try {
+            res = readStrListFromFile(SYS_NODE_DP_MODES);
+        } catch (IOException e) {
+            e.printStackTrace();
+        }
+        return processModeStr(res);
+    }
+}
diff --git a/src/com/android/settings/display/ScreenScaleActivity.java b/src/com/android/settings/display/ScreenScaleActivity.java
new file mode 100644
index 0000000000..128638d693
--- /dev/null
+++ b/src/com/android/settings/display/ScreenScaleActivity.java
@@ -0,0 +1,380 @@
+package com.android.settings.display;
+
+import android.os.Handler;
+import android.annotation.TargetApi;
+import android.app.Activity;
+import android.os.Bundle;
+import android.view.KeyEvent;
+import android.view.WindowManager;
+import android.os.Build;
+import android.os.Message;
+import android.widget.ImageView;
+import android.view.View;
+import android.graphics.PixelFormat;
+import android.graphics.BitmapFactory;
+import android.graphics.Bitmap;
+import android.widget.RelativeLayout;
+import android.widget.Toast;
+import android.text.TextUtils;
+import android.util.DisplayMetrics;
+import android.util.Log;
+
+import com.android.settings.R;
+import com.android.settings.utils.ReflectUtils;
+
+import android.os.SystemProperties;
+
+public class ScreenScaleActivity extends Activity {
+    private static final String TAG = "ScreenScaleActivity";
+    private final int RightButtonPressed = 0;
+    private final int LeftButttonPressed = 1;
+    private final int UpButtonPressed = 2;
+    private final int DownButtonPressed = 3;
+    private final int RightButtonResume = 4;
+    private final int LeftButtonResume = 5;
+    private final int UpButtonResume = 6;
+    private final int DownButtonResume = 7;
+
+    private ImageView mDirctionButton;
+    private ImageView mRightButton;
+    private ImageView mLeftButton;
+    private ImageView mUpButton;
+    private ImageView mDownButton;
+
+    private static final int MAX_SCALE = 100;
+    private static final int MIN_SCALE = 80;
+
+    public static final int SYSTEM_UI_FLAG_SHOW_FULLSCREEN = 0x00000004;
+    public static final String EXTRA_DISPLAY_INFO = "extra_display_info";
+
+    private int mScreenWidth = 0;
+    private int mScreenHeight = 0;
+    private int mDensityDpi = 0;
+    private int mDefaultDpi = 160;
+    private float mDpiRatio = 0;
+    private int mkeylast = -1;
+    public static final String PROPERTY_OVERSCAN_MAIN = "persist.sys.overscan.main";
+    public static final String PROPERTY_OVERSCAN_AUX = "persist.sys.overscan.aux";
+    private final int DISPLAY_OVERSCAN_X = 0;
+    private final int DISPLAY_OVERSCAN_Y = 1;
+    private final int OVERSCAN_LEFT = 0;
+    private final int OVERSCAN_TOP = 1;
+    private final int OVERSCAN_RIGHT = 2;
+    private final int OVERSCAN_BOTTOM = 3;
+
+    /**
+     * 当前设备的显示信息
+     */
+    private DisplayInfo mDisplayInfo;
+    /**
+     * 左侧缩放
+     */
+    private int mLeftScale = 100;
+    /**
+     * 底部缩放
+     */
+    private int mBottomScale = 100;
+
+    private void getScreenSize() {
+        DisplayMetrics displayMetrics = new DisplayMetrics();
+        getWindowManager().getDefaultDisplay().getRealMetrics(displayMetrics);
+        mScreenWidth = displayMetrics.widthPixels;
+        mScreenHeight = displayMetrics.heightPixels;
+        mDensityDpi = displayMetrics.densityDpi;
+        mDpiRatio = ((float) mDefaultDpi) / (float) displayMetrics.densityDpi;
+        Log.d(TAG, "displayMetrics.densityDpi is: " + mDensityDpi);
+        Log.d(TAG, "displayMetrics.widthPixels is: " + mScreenWidth);
+        Log.d(TAG, "displayMetrics.heightPixels is: " + mScreenHeight);
+    }
+
+    private Bitmap bitMapScale(int id) {
+        Bitmap map = BitmapFactory.decodeResource(this.getResources(), id);
+        float scale = mScreenWidth / 1280f * mDpiRatio;
+        int width = (int) ((float) map.getWidth() * scale);
+        int height = (int) ((float) map.getHeight() * scale);
+
+        Bitmap resize = Bitmap.createScaledBitmap(map, width, height, true);
+        return resize;
+    }
+
+    private void createView() {
+        int centerX = mScreenWidth / 2;
+        int y = mScreenHeight / 5;
+
+        ImageView touch_up = (ImageView) findViewById(R.id.screen_touch_up);
+        Bitmap map = bitMapScale(R.drawable.screen_vertical_reduce_default);
+        RelativeLayout.LayoutParams param = new RelativeLayout.LayoutParams(map.getWidth(), map.getHeight());
+        param.addRule(RelativeLayout.ALIGN_PARENT_TOP);
+        param.setMargins(centerX - map.getWidth() / 2, y, 0, 0);
+
+        y += map.getHeight() + 10;
+        touch_up.setLayoutParams(param);
+
+        mUpButton = (ImageView) findViewById(R.id.button_up);
+        map = bitMapScale(R.drawable.ic_screen_scale_up_default);
+        y += map.getHeight() + 10;
+        param = new RelativeLayout.LayoutParams(map.getWidth(), map.getHeight());
+        param.addRule(RelativeLayout.BELOW, R.id.screen_touch_up);
+        param.setMargins(centerX - map.getWidth() / 2, 10, 0, 0);
+        mUpButton.setLayoutParams(param);
+
+        ImageView ok = (ImageView) findViewById(R.id.button_ok);
+        Bitmap okmap = bitMapScale(R.drawable.ic_screen_scale_ok);
+        y += okmap.getHeight() / 2;
+        param = new RelativeLayout.LayoutParams(okmap.getWidth(), okmap.getHeight());
+        param.addRule(RelativeLayout.BELOW, R.id.button_up);
+        param.setMargins(centerX - okmap.getWidth() / 2, 10, 0, 0);
+        ok.setLayoutParams(param);
+
+        mDownButton = (ImageView) findViewById(R.id.button_down);
+        map = bitMapScale(R.drawable.ic_screen_scale_down_default);
+        param = new RelativeLayout.LayoutParams(map.getWidth(), map.getHeight());
+        param.addRule(RelativeLayout.BELOW, R.id.button_ok);
+        param.setMargins(centerX - map.getWidth() / 2, 10, 0, 0);
+        mDownButton.setLayoutParams(param);
+
+        ImageView touch_down = (ImageView) findViewById(R.id.screen_touch_down);
+        map = bitMapScale(R.drawable.screen_vertical_add_default);
+        param = new RelativeLayout.LayoutParams(map.getWidth(), map.getHeight());
+        param.addRule(RelativeLayout.BELOW, R.id.button_down);
+        param.setMargins(centerX - map.getWidth() / 2, 10, 0, 0);
+        touch_down.setLayoutParams(param);
+
+
+        mLeftButton = (ImageView) findViewById(R.id.button_left);
+        map = bitMapScale(R.drawable.ic_screen_scale_left_default);
+        int x = -okmap.getWidth() / 2 - 10 - map.getWidth() / 2;
+        param = new RelativeLayout.LayoutParams(map.getWidth(), map.getHeight());
+        param.addRule(RelativeLayout.ALIGN_LEFT, R.id.button_ok);
+        param.setMargins(x, y - map.getHeight() / 2, 0, 0);
+        mLeftButton.setLayoutParams(param);
+
+        ImageView left = (ImageView) findViewById(R.id.screen_button_left);
+        map = bitMapScale(R.drawable.screen_horizontal_reduce_default);
+        x += -map.getWidth() / 2 - 10;
+        RelativeLayout.LayoutParams param0 = new RelativeLayout.LayoutParams(map.getWidth(), map.getHeight());
+        param0.addRule(RelativeLayout.ALIGN_LEFT, R.id.button_left);
+        param0.setMargins(x, y - map.getHeight() / 2, 0, 0);
+        left.setLayoutParams(param0);
+
+        mRightButton = (ImageView) findViewById(R.id.button_right);
+        map = bitMapScale(R.drawable.ic_screen_scale_right_default);
+        x = okmap.getWidth() / 2 + 10 + map.getWidth() / 2;
+        param = new RelativeLayout.LayoutParams(map.getWidth(), map.getHeight());
+        param.addRule(RelativeLayout.ALIGN_RIGHT, R.id.button_ok);
+        param.setMargins(0, y - map.getHeight() / 2, -x, 0);
+        mRightButton.setLayoutParams(param);
+
+        ImageView right = (ImageView) findViewById(R.id.screen_button_right);
+        map = bitMapScale(R.drawable.screen_horizontal_add_default);
+        x += 10 + map.getWidth() / 2;
+        param = new RelativeLayout.LayoutParams(map.getWidth(), map.getHeight());
+        param.addRule(RelativeLayout.ALIGN_RIGHT, R.id.button_right);
+        param.setMargins(0, y - map.getHeight() / 2, -x, 0);
+        right.setLayoutParams(param);
+
+        mRightButton.setOnClickListener(mOnClick);
+        mLeftButton.setOnClickListener(mOnClick);
+        mUpButton.setOnClickListener(mOnClick);
+        mDownButton.setOnClickListener(mOnClick);
+    }
+
+    // This snippet hides the system bars.
+    @TargetApi(19)
+    private void hideSystemUI() {
+        // Set the IMMERSIVE flag.
+        // Set the content to appear under the system bars so that the content
+        // doesn't resize when the system bars hide and show.
+        if (Build.VERSION.SDK_INT >= 19) {
+            getWindow().setFlags(WindowManager.LayoutParams.FLAG_TRANSLUCENT_NAVIGATION,
+                    WindowManager.LayoutParams.FLAG_TRANSLUCENT_NAVIGATION);
+            getWindow().setFlags(WindowManager.LayoutParams.FLAG_TRANSLUCENT_STATUS,
+                    WindowManager.LayoutParams.FLAG_TRANSLUCENT_STATUS);
+            getWindow().getDecorView().setSystemUiVisibility(
+                    View.SYSTEM_UI_FLAG_LAYOUT_STABLE
+                            | View.SYSTEM_UI_FLAG_LAYOUT_HIDE_NAVIGATION
+                            | View.SYSTEM_UI_FLAG_LAYOUT_FULLSCREEN
+                            | View.SYSTEM_UI_FLAG_HIDE_NAVIGATION // hide nav bar
+                            | View.SYSTEM_UI_FLAG_FULLSCREEN // hide status bar
+                            | View.SYSTEM_UI_FLAG_IMMERSIVE_STICKY);
+        }
+    }
+
+    public void onCreate(Bundle savedInstanceState) {
+        super.onCreate(savedInstanceState);
+        initData();
+        //full screen
+        hideSystemUI();
+
+        setContentView(R.layout.screen_scale_setting);
+
+        getWindow().setFormat(PixelFormat.RGBA_8888);
+//      BitmapFactory.setDefaultConfig(Bitmap.Config.ARGB_8888);
+        getScreenSize();
+        createView();
+    }
+
+    private View.OnClickListener mOnClick = new View.OnClickListener() {
+        public void onClick(View v) {
+            int id = v.getId();
+            if (id == R.id.button_right) {
+                LOGD("button_right");
+                rightClick(true);
+            } else if (id == R.id.button_left) {
+                LOGD("button_left");
+                leftClick(true);
+            } else if (id == R.id.button_up) {
+                LOGD("touch_up");
+                upClick(true);
+            } else if (id == R.id.button_down) {
+                LOGD("touch_down");
+                downClick(true);
+            }
+        }
+    };
+
+    public boolean dispatchKeyEvent(KeyEvent event) {
+        int keyCode = event.getKeyCode();
+        LOGD("keyCode = " + keyCode);
+        if (mkeylast != keyCode) {
+            mkeylast = keyCode;
+            switch (keyCode) {
+                case KeyEvent.KEYCODE_DPAD_RIGHT:
+                    rightClick(false);
+                    break;
+                case KeyEvent.KEYCODE_DPAD_LEFT:
+                    leftClick(false);
+                    break;
+                case KeyEvent.KEYCODE_DPAD_UP:
+                    upClick(false);
+                    break;
+                case KeyEvent.KEYCODE_DPAD_DOWN:
+                    downClick(false);
+                    break;
+            }
+        } else {
+            mkeylast = -1;
+        }
+
+        return super.dispatchKeyEvent(event);
+    }
+
+    private Handler mHandler = new Handler() {
+        public void handleMessage(Message msg) {
+            switch (msg.what) {
+                case RightButtonResume:
+                    mRightButton.setImageResource(R.drawable.ic_screen_scale_right);
+                    break;
+                case LeftButtonResume:
+                    mLeftButton.setImageResource(R.drawable.ic_screen_scale_left);
+                    break;
+                case UpButtonResume:
+                    mUpButton.setImageResource(R.drawable.ic_screen_scale_up);
+                    break;
+                case DownButtonResume:
+                    mDownButton.setImageResource(R.drawable.ic_screen_scale_down);
+                    break;
+            }
+        }
+    };
+
+    private void LOGD(String msg) {
+        if (true)
+            Log.d("ScreenSettingActivity", msg);
+    }
+
+    private void rightClick(boolean isClick) {
+        mLeftScale += 1;
+        if (mLeftScale > MAX_SCALE)
+            mLeftScale = MAX_SCALE;
+        setOverScanProperty(OVERSCAN_LEFT, mLeftScale);
+        setOverScanProperty(OVERSCAN_RIGHT, mLeftScale);
+        if (!isClick) {
+            mRightButton.setImageResource(R.drawable.ic_screen_scale_right_pressed);
+            mHandler.removeMessages(RightButtonResume);
+            mHandler.sendEmptyMessageDelayed(RightButtonResume, 100);
+        }
+    }
+
+    private void leftClick(boolean isClick) {
+        mLeftScale -= 1;
+        if (mLeftScale < MIN_SCALE)
+            mLeftScale = MIN_SCALE;
+        setOverScanProperty(OVERSCAN_LEFT, mLeftScale);
+        setOverScanProperty(OVERSCAN_RIGHT, mLeftScale);
+        if (!isClick) {
+            mLeftButton.setImageResource(R.drawable.ic_screen_scale_left_pressed);
+            mHandler.removeMessages(LeftButtonResume);
+            mHandler.sendEmptyMessageDelayed(LeftButtonResume, 100);
+        }
+    }
+
+    private void upClick(boolean isClick) {
+        mBottomScale -= 1;
+        if (mBottomScale < MIN_SCALE)
+            mBottomScale = MIN_SCALE;
+        setOverScanProperty(OVERSCAN_TOP, mBottomScale);
+        setOverScanProperty(OVERSCAN_BOTTOM, mBottomScale);
+        if (!isClick) {
+            mUpButton.setImageResource(R.drawable.ic_screen_scale_up_pressed);
+            mHandler.removeMessages(UpButtonResume);
+            mHandler.sendEmptyMessageDelayed(UpButtonResume, 100);
+        }
+    }
+
+    private void downClick(boolean isClick) {
+        mBottomScale += 1;
+        if (mBottomScale > MAX_SCALE)
+            mBottomScale = MAX_SCALE;
+        setOverScanProperty(OVERSCAN_TOP, mBottomScale);
+        setOverScanProperty(OVERSCAN_BOTTOM, mBottomScale);
+        if (!isClick) {
+            mDownButton.setImageResource(R.drawable.ic_screen_scale_down_pressed);
+            mHandler.removeMessages(DownButtonResume);
+            mHandler.sendEmptyMessageDelayed(DownButtonResume, 100);
+        }
+    }
+
+    /**
+     * 初始化数据
+     */
+    public void initData() {
+        mDisplayInfo = (DisplayInfo) getIntent().getSerializableExtra(EXTRA_DISPLAY_INFO);
+        if (null == mDisplayInfo) {
+            Toast.makeText(this, "not display info", Toast.LENGTH_SHORT).show();
+            finish();
+            return;
+        }
+        String overScan;
+        if (mDisplayInfo.getDisplayId() == 0) {
+            overScan = SystemProperties.get(PROPERTY_OVERSCAN_MAIN);
+        } else {
+            overScan = SystemProperties.get(PROPERTY_OVERSCAN_AUX);
+        }
+        if (TextUtils.isEmpty(overScan))
+            return;
+        try {
+            mLeftScale = Integer.parseInt(overScan.split(",")[0].split("\\s+")[1]);
+        } catch (Exception e) {
+        }
+        try {
+            mBottomScale = Integer.parseInt(overScan.split(",")[3]);
+        } catch (Exception e) {
+        }
+    }
+
+    private void setOverScanProperty(int direction, int value) {
+        Object rkDisplayOutputManager = null;
+        try {
+            rkDisplayOutputManager = Class.forName("android.os.RkDisplayOutputManager").newInstance();
+        } catch (Exception e) {
+            // no handle
+        }
+        if (rkDisplayOutputManager == null) {
+            return;
+        }
+        Log.i(TAG, "setOverScanProperty->time1:" + System.currentTimeMillis() + "mDisplayInfo.getDisplayId()=" + mDisplayInfo.getDisplayId());
+        ReflectUtils.invokeMethod(rkDisplayOutputManager, "setOverScan", new Class[]{int.class, int.class, int.class}, new Object[]{mDisplayInfo.getDisplayId(), direction, value});
+        Log.i(TAG, "setOverScanProperty->time2:" + System.currentTimeMillis() + "mDisplayInfo.getDisplayId()=" + mDisplayInfo.getDisplayId());
+    }
+}
diff --git a/src/com/android/settings/utils/ReflectUtils.java b/src/com/android/settings/utils/ReflectUtils.java
new file mode 100644
index 0000000000..c9bd447fe4
--- /dev/null
+++ b/src/com/android/settings/utils/ReflectUtils.java
@@ -0,0 +1,68 @@
+package com.android.settings.utils;
+
+import java.lang.reflect.Field;
+import java.lang.reflect.Method;
+
+import android.util.Log;
+
+/**
+ * 反射工具
+ *
+ * @author GaoFei
+ */
+public class ReflectUtils {
+    private static final String TAG = "ReflectUtils";
+
+    public static void setFieldValue(Object targetObject, String filedName, Object filedvalue) {
+        try {
+            Field field = targetObject.getClass().getDeclaredField(filedName);
+            field.setAccessible(true);
+            field.set(targetObject, filedvalue);
+        } catch (Exception e) {
+            Log.e(TAG, "setFieldValue->filedName:" + filedName);
+            Log.e(TAG, "setFieldValue->value:" + filedvalue);
+            Log.e(TAG, "setFieldValue->exception:" + e);
+        }
+
+    }
+
+    public static Object getFieldValue(Object targetObject, String filedName) {
+        try {
+            Field field = targetObject.getClass().getDeclaredField(filedName);
+            field.setAccessible(true);
+            return field.get(targetObject);
+        } catch (Exception e) {
+            Log.e(TAG, "getFieldValue->filedName:" + filedName);
+            Log.e(TAG, "getFieldValue->exception:" + e);
+        }
+        return null;
+    }
+
+    public static Object invokeMethod(Object object, String methodName, Class<?>[] paramTypes, Object[] values) {
+        try {
+            Method method = object.getClass().getDeclaredMethod(methodName, paramTypes);
+            method.setAccessible(true);
+            return method.invoke(object, values);
+            //return method.invoke(object, paramTypes);
+        } catch (Exception e) {
+            Log.e(TAG, "invokeMethod->methodName:" + methodName);
+            Log.e(TAG, "invokeMethod->exception:" + e);
+
+        }
+        return null;
+    }
+
+    public static Object invokeMethodNoParameter(Object object, String methodName) {
+        try {
+            Method method = object.getClass().getDeclaredMethod(methodName);
+            method.setAccessible(true);
+            return method.invoke(object);
+            //return method.invoke(object, paramTypes);
+        } catch (Exception e) {
+            Log.e(TAG, "invokeMethod->methodName:" + methodName);
+            Log.e(TAG, "invokeMethod->exception:" + e);
+
+        }
+        return null;
+    }
+}
-- 
2.35.1

