From 1ee57f25ae6a58c0c417139fe7c7ba5901a5fa60 Mon Sep 17 00:00:00 2001
From: Nandana Dutt <nandana@google.com>
Date: Mon, 23 Dec 2019 12:48:00 +0000
Subject: [PATCH 04/26] Support upsert

Apps sometimes create a file via direct path
and then insert it into MediaStore via ContentResolver.
The former should create a database entry now, once
we scanfile on close.

Do not fail the latter insert; but treat it like an upsert.

BUG: 149300533
Test: atest MediaStore_Images_MediaTest#testUpsert
Change-Id: Iff7c50646c4998aa2d6f0da596fc75885695c8a2
(cherry picked from commit a1059a491164b352e07281606cb0efe7a5dfa3e4)
---
 .../providers/media/MediaProvider.java        | 50 ++++++++++++++++++-
 1 file changed, 49 insertions(+), 1 deletion(-)

diff --git a/src/com/android/providers/media/MediaProvider.java b/src/com/android/providers/media/MediaProvider.java
index 2dafd9d8..f37f881a 100644
--- a/src/com/android/providers/media/MediaProvider.java
+++ b/src/com/android/providers/media/MediaProvider.java
@@ -2445,7 +2445,7 @@ public class MediaProvider extends ContentProvider {
                 }
             }
 
-            rowId = qb.insert(helper, values);
+            rowId = insertAllowingUpsert(qb, helper, values, path);
         }
         if (format == MtpConstants.FORMAT_ASSOCIATION) {
             synchronized (mDirectoryCache) {
@@ -2456,6 +2456,54 @@ public class MediaProvider extends ContentProvider {
         return rowId;
     }
 
+    /**
+     * Inserts a new row in MediaProvider database with {@code values}. Treats insert as upsert for
+     * double inserts from same package.
+     */
+    private long insertAllowingUpsert(@NonNull SQLiteQueryBuilder qb,
+            @NonNull DatabaseHelper helper, @NonNull ContentValues values, String path)
+            throws SQLiteConstraintException {
+        return helper.runWithTransaction(() -> {
+            try {
+                return qb.insert(helper, values);
+            } catch (SQLiteConstraintException e) {
+                final long rowId = getIdIfPathExistsForPackage(qb, helper, path,
+                        getCallingPackageOrSelf());
+                // Apps sometimes create a file via direct path and then insert it into
+                // MediaStore via ContentResolver. The former should create a database entry,
+                // so we have to treat the latter as an upsert.
+                // TODO(b/149917493) Perform all INSERT operations as UPSERT.
+                if (rowId != -1 && qb.update(helper, values, "_id=?",
+                        new String[]{Long.toString(rowId)}) == 1) {
+                    return rowId;
+                }
+                // Rethrow SQLiteConstraintException on failed upsert.
+                throw e;
+            }
+        });
+    }
+
+    /**
+     * @return row id of the entry with path {@code path} and owner {@code packageName}, if it
+     * exists.
+     */
+    private long getIdIfPathExistsForPackage(@NonNull SQLiteQueryBuilder qb,
+            @NonNull DatabaseHelper helper, String path, String packageName) {
+        final String[] projection = new String[] {FileColumns._ID};
+        final String selection = FileColumns.DATA + " LIKE ? AND " +
+                FileColumns.OWNER_PACKAGE_NAME + " LIKE ? ";
+
+        // TODO(b:149842708) Handle sharedUid. Package name check will fail if FUSE didn't
+        // use the right package name for sharedUid.
+        try (Cursor c = qb.query(helper, projection, selection, new String[] {path, packageName},
+                null, null, null, null, null)) {
+            if (c.moveToFirst()) {
+                return c.getLong(0);
+            }
+        }
+        return -1;
+    }
+
     private void maybePut(@NonNull ContentValues values, @NonNull String key,
             @Nullable String value) {
         if (value != null) {
-- 
2.35.1

