From 5228c313591349eb0251203981c0e87841046087 Mon Sep 17 00:00:00 2001
From: Stan Iliev <stani@google.com>
Date: Mon, 2 Dec 2019 11:52:02 -0500
Subject: [PATCH 051/297] Revert "Merge "switch to new SkPathDirection enum""

This reverts commit db644b952e64a1f572a41e1b2953eb99a5ae6d3b, reversing
changes made to b80612d1e271abe6b7243c7adfe0d68161d87cef.

Test: Build and ran Android
Bug: 145261411
Change-Id: Icb4971a4b25d0a97b99e579521ef1f1b349fb04f
(cherry picked from commit 9b7faad8740d0b127d70c05a729e6057a7186352)
---
 core/jni/android/graphics/Path.cpp           | 14 +++++++-------
 libs/hwui/tests/unit/VectorDrawableTests.cpp |  6 +++---
 libs/hwui/utils/VectorDrawableUtils.cpp      |  4 ++--
 3 files changed, 12 insertions(+), 12 deletions(-)

diff --git a/core/jni/android/graphics/Path.cpp b/core/jni/android/graphics/Path.cpp
index 1b2776525e4..302de0fee2c 100644
--- a/core/jni/android/graphics/Path.cpp
+++ b/core/jni/android/graphics/Path.cpp
@@ -132,14 +132,14 @@ public:
     static void addRect(JNIEnv* env, jclass clazz, jlong objHandle,
             jfloat left, jfloat top, jfloat right, jfloat bottom, jint dirHandle) {
         SkPath* obj = reinterpret_cast<SkPath*>(objHandle);
-        SkPathDirection dir = static_cast<SkPathDirection>(dirHandle);
+        SkPath::Direction dir = static_cast<SkPath::Direction>(dirHandle);
         obj->addRect(left, top, right, bottom, dir);
     }
 
     static void addOval(JNIEnv* env, jclass clazz, jlong objHandle,
             jfloat left, jfloat top, jfloat right, jfloat bottom, jint dirHandle) {
         SkPath* obj = reinterpret_cast<SkPath*>(objHandle);
-        SkPathDirection dir = static_cast<SkPathDirection>(dirHandle);
+        SkPath::Direction dir = static_cast<SkPath::Direction>(dirHandle);
         SkRect oval = SkRect::MakeLTRB(left, top, right, bottom);
         obj->addOval(oval, dir);
     }
@@ -147,7 +147,7 @@ public:
     static void addCircle(JNIEnv* env, jclass clazz, jlong objHandle, jfloat x, jfloat y,
             jfloat radius, jint dirHandle) {
         SkPath* obj = reinterpret_cast<SkPath*>(objHandle);
-        SkPathDirection dir = static_cast<SkPathDirection>(dirHandle);
+        SkPath::Direction dir = static_cast<SkPath::Direction>(dirHandle);
         obj->addCircle(x, y, radius, dir);
     }
 
@@ -162,7 +162,7 @@ public:
             jfloat right, jfloat bottom, jfloat rx, jfloat ry, jint dirHandle) {
         SkRect rect = SkRect::MakeLTRB(left, top, right, bottom);
         SkPath* obj = reinterpret_cast<SkPath*>(objHandle);
-        SkPathDirection dir = static_cast<SkPathDirection>(dirHandle);
+        SkPath::Direction dir = static_cast<SkPath::Direction>(dirHandle);
         obj->addRoundRect(rect, rx, ry, dir);
     }
 
@@ -170,7 +170,7 @@ public:
                 jfloat right, jfloat bottom, jfloatArray array, jint dirHandle) {
         SkRect rect = SkRect::MakeLTRB(left, top, right, bottom);
         SkPath* obj = reinterpret_cast<SkPath*>(objHandle);
-        SkPathDirection dir = static_cast<SkPathDirection>(dirHandle);
+        SkPath::Direction dir = static_cast<SkPath::Direction>(dirHandle);
         AutoJavaFloatArray  afa(env, array, 8);
 #ifdef SK_SCALAR_IS_FLOAT
         const float* src = afa.ptr();
@@ -555,8 +555,8 @@ static const JNINativeMethod methods[] = {
 int register_android_graphics_Path(JNIEnv* env) {
     return RegisterMethodsOrDie(env, "android/graphics/Path", methods, NELEM(methods));
 
-    static_assert(0 == (int)SkPathDirection::kCW,  "direction_mismatch");
-    static_assert(1 == (int)SkPathDirection::kCCW, "direction_mismatch");
+    static_assert(0  == SkPath::kCW_Direction,  "direction_mismatch");
+    static_assert(1  == SkPath::kCCW_Direction, "direction_mismatch");
 }
 
 }
diff --git a/libs/hwui/tests/unit/VectorDrawableTests.cpp b/libs/hwui/tests/unit/VectorDrawableTests.cpp
index 6d4c57413f0..60fd7a753f2 100644
--- a/libs/hwui/tests/unit/VectorDrawableTests.cpp
+++ b/libs/hwui/tests/unit/VectorDrawableTests.cpp
@@ -85,9 +85,9 @@ const static TestData sTestDataSet[] = {
              outPath->rCubicTo(8.0, 8.0, 8.0, 8.0, 8.0, 8.0);
              outPath->cubicTo(16.0, 16.0, 9.0, 9.0, 9.0, 9.0);
              outPath->rCubicTo(0.0, 0.0, 9.0, 9.0, 9.0, 9.0);
-             outPath->arcTo(10.0, 10.0, 0.0, SkPath::kLarge_ArcSize, SkPathDirection::kCW, 10.0,
+             outPath->arcTo(10.0, 10.0, 0.0, SkPath::kLarge_ArcSize, SkPath::kCW_Direction, 10.0,
                             10.0);
-             outPath->arcTo(10.0, 10.0, 0.0, SkPath::kLarge_ArcSize, SkPathDirection::kCW, 20.0,
+             outPath->arcTo(10.0, 10.0, 0.0, SkPath::kLarge_ArcSize, SkPath::kCW_Direction, 20.0,
                             20.0);
          }},
 
@@ -159,7 +159,7 @@ const static TestData sTestDataSet[] = {
          },
          [](SkPath* outPath) {
              outPath->moveTo(300.0, 70.0);
-             outPath->arcTo(230.0, 230.0, 0.0, SkPath::kLarge_ArcSize, SkPathDirection::kCCW,
+             outPath->arcTo(230.0, 230.0, 0.0, SkPath::kLarge_ArcSize, SkPath::kCCW_Direction,
                             301.0, 70.0);
              outPath->close();
              outPath->moveTo(300.0, 70.0);
diff --git a/libs/hwui/utils/VectorDrawableUtils.cpp b/libs/hwui/utils/VectorDrawableUtils.cpp
index bd963df6750..6b8f3154dd3 100644
--- a/libs/hwui/utils/VectorDrawableUtils.cpp
+++ b/libs/hwui/utils/VectorDrawableUtils.cpp
@@ -300,7 +300,7 @@ void PathResolver::addCommand(SkPath* outPath, char previousCmd, char cmd,
                 // (rx ry x-axis-rotation large-arc-flag sweep-flag x y)
                 outPath->arcTo(points->at(k + 0), points->at(k + 1), points->at(k + 2),
                                (SkPath::ArcSize) (points->at(k + 3) != 0),
-                               (SkPathDirection) (points->at(k + 4) == 0),
+                               (SkPath::Direction) (points->at(k + 4) == 0), 
                                points->at(k + 5) + currentX, points->at(k + 6) + currentY);
                 currentX += points->at(k + 5);
                 currentY += points->at(k + 6);
@@ -310,7 +310,7 @@ void PathResolver::addCommand(SkPath* outPath, char previousCmd, char cmd,
             case 'A':  // Draws an elliptical arc
                 outPath->arcTo(points->at(k + 0), points->at(k + 1), points->at(k + 2),
                                (SkPath::ArcSize) (points->at(k + 3) != 0),
-                               (SkPathDirection) (points->at(k + 4) == 0),
+                               (SkPath::Direction) (points->at(k + 4) == 0), 
                                points->at(k + 5), points->at(k + 6));
                 currentX = points->at(k + 5);
                 currentY = points->at(k + 6);
-- 
2.36.0

