From 64cd0d2031280061340dc1f2ea2a3b9419f819d7 Mon Sep 17 00:00:00 2001
From: Zhixiong Lin <zhixiong.lin@rock-chips.com>
Date: Tue, 3 Nov 2020 09:37:46 +0800
Subject: [PATCH 16/33] renderengine: Force use sync_wait to wait release_fence
 in utgard GPU

Change-Id: I258cc18d5d1a50a6acf095ab3071a234277a2e86
Signed-off-by: Zhixiong Lin <zhixiong.lin@rock-chips.com>
---
 libs/renderengine/Android.bp              | 22 +++++++-
 libs/renderengine/Android.go              | 69 +++++++++++++++++++++++
 libs/renderengine/gl/GLESRenderEngine.cpp |  5 +-
 3 files changed, 94 insertions(+), 2 deletions(-)
 create mode 100644 libs/renderengine/Android.go
 mode change 100644 => 100755 libs/renderengine/gl/GLESRenderEngine.cpp

diff --git a/libs/renderengine/Android.bp b/libs/renderengine/Android.bp
index eb6080fc2..dca87ba8e 100644
--- a/libs/renderengine/Android.bp
+++ b/libs/renderengine/Android.bp
@@ -64,9 +64,29 @@ filegroup {
     ],
 }
 
+bootstrap_go_package {
+    name: "soong-librenderengine",
+    pkgPath: "android/soong/librenderengine",
+    deps: [
+        "blueprint",
+        "blueprint-pathtools",
+        "soong",
+        "soong-android",
+        "soong-cc",
+        "soong-genrule",
+    ],
+    srcs: [
+          "Android.go",
+    ],
+    pluginFor: ["soong_build"],
+}
+
+cc_librenderengine {
+    name: "cc_librenderengine_defaults"
+}
 cc_library_static {
     name: "librenderengine",
-    defaults: ["librenderengine_defaults"],
+    defaults: ["librenderengine_defaults","cc_librenderengine_defaults"],
     vendor_available: true,
     vndk: {
         enabled: true,
diff --git a/libs/renderengine/Android.go b/libs/renderengine/Android.go
new file mode 100644
index 000000000..6787ab22d
--- /dev/null
+++ b/libs/renderengine/Android.go
@@ -0,0 +1,69 @@
+package librenderengine
+
+import (
+        "android/soong/android"
+        "android/soong/cc"
+//        "fmt"
+        "strings"
+)
+
+func init() {
+	//该打印会在执行mm命令时，打印在屏幕上
+    //fmt.Println("librenderengine want to conditional Compile")
+
+	android.RegisterModuleType("cc_librenderengine", DefaultsFactory)
+}
+
+func DefaultsFactory() (android.Module) {
+    module := cc.DefaultsFactory()
+    android.AddLoadHook(module, Defaults)
+    return module
+}
+
+func Defaults(ctx android.LoadHookContext) {
+    type props struct {
+        Cflags []string
+    }
+    p := &props{}
+    p.Cflags = globalDefaults(ctx)
+    ctx.AppendProperties(p)
+}
+//条件编译主要修改函数
+func globalDefaults(ctx android.BaseContext) ([]string) {
+	var cppflags []string
+	//该打印输出为: TARGET_PRODUCT:rk3328 fmt.Println("TARGET_PRODUCT:",ctx.AConfig().Getenv("TARGET_PRODUCT")) //通过 strings.EqualFold 比较字符串，可参考go语言字符串对比
+    //fmt.Println("TARGET_BOARD_PLATFORM_GPU:",ctx.AConfig().Getenv("TARGET_BOARD_PLATFORM_GPU")) //通过 strings.EqualFold 比较字符串，可参考go语言字符串对比
+    if (strings.EqualFold(ctx.AConfig().Getenv("TARGET_BOARD_PLATFORM_GPU"),"mali-t720")) {
+	//添加 DEBUG 宏定义
+        cppflags = append(cppflags,"-DMALI_PRODUCT_ID_T72X=1")
+    } else if (strings.EqualFold(ctx.AConfig().Getenv("TARGET_BOARD_PLATFORM_GPU"),"mali-t760")) {
+        cppflags = append(cppflags,"-DMALI_PRODUCT_ID_T76X=1")
+    } else if (strings.EqualFold(ctx.AConfig().Getenv("TARGET_BOARD_PLATFORM_GPU"),"mali-t860")) {
+        cppflags = append(cppflags,"-DMALI_PRODUCT_ID_T86X=1")
+    } else if (strings.EqualFold(ctx.AConfig().Getenv("TARGET_BOARD_PLATFORM_GPU"),"G6110")) {
+        cppflags = append(cppflags,"-DGPU_G6110")
+    } else if (strings.EqualFold(ctx.AConfig().Getenv("TARGET_BOARD_PLATFORM_GPU"),"mali-tDVx")) {
+        cppflags = append(cppflags,"-DMALI_PRODUCT_ID_TDVX=1")
+    } else if (strings.EqualFold(ctx.AConfig().Getenv("TARGET_BOARD_PLATFORM_GPU"),"mali400")) {
+        cppflags = append(cppflags,"-DMALI_PRODUCT_ID_400=1")
+    } else if (strings.EqualFold(ctx.AConfig().Getenv("TARGET_BOARD_PLATFORM_GPU"),"mali450")) {
+        cppflags = append(cppflags,"-DMALI_PRODUCT_ID_450=1")
+    }
+
+    //fmt.Println("TARGET_PRODUCT:",ctx.AConfig().Getenv("TARGET_PRODUCT"))
+    if (strings.Contains(ctx.AConfig().Getenv("TARGET_PRODUCT"),"rk3288")) {
+        cppflags = append(cppflags,
+           "-DRK_NV12_10_TO_NV12_BY_RGA=0",
+           "-DRK_NV12_10_TO_NV12_BY_NENO=1")
+    }else if (strings.Contains(ctx.AConfig().Getenv("TARGET_PRODUCT"),"rk3399")){
+        cppflags = append(cppflags,
+            "-DRK_HDR=1")
+    }else{
+        cppflags = append(cppflags,
+            "-DRK_NV12_10_TO_NV12_BY_RGA=1",
+            "-DRK_NV12_10_TO_NV12_BY_NENO=0")
+    }
+
+	//将需要区分的环境变量在此区域添加 //....
+	return cppflags
+}
diff --git a/libs/renderengine/gl/GLESRenderEngine.cpp b/libs/renderengine/gl/GLESRenderEngine.cpp
old mode 100644
new mode 100755
index 92e7e715e..880806a0b
--- a/libs/renderengine/gl/GLESRenderEngine.cpp
+++ b/libs/renderengine/gl/GLESRenderEngine.cpp
@@ -992,9 +992,12 @@ status_t GLESRenderEngine::drawLayers(const DisplaySettings& display,
     }
 
     if (bufferFence.get() >= 0) {
+#if !MALI_PRODUCT_ID_450 && !MALI_PRODUCT_ID_400
         // Duplicate the fence for passing to waitFence.
         base::unique_fd bufferFenceDup(dup(bufferFence.get()));
-        if (bufferFenceDup < 0 || !waitFence(std::move(bufferFenceDup))) {
+        if (bufferFenceDup < 0 || !waitFence(std::move(bufferFenceDup)))
+#endif
+        {
             ATRACE_NAME("Waiting before draw");
             sync_wait(bufferFence.get(), -1);
         }
-- 
2.35.1

