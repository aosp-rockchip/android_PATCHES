From 0c993e99f8b97f1d078e336e4b4f34d7f277b8d3 Mon Sep 17 00:00:00 2001
From: Alex Zhao <zzc@rock-chips.com>
Date: Tue, 1 Sep 2020 10:29:41 +0800
Subject: [PATCH 1/4] Initial commit for android11

Signed-off-by: Alex Zhao <zzc@rock-chips.com>
Change-Id: I175dd776c6f3e000a5e175ec82254feea6b9c357
---
 src/common/wpa_common.h                |   3 +
 wpa_supplicant/Android.mk              |   2 +-
 wpa_supplicant/hidl/1.3/supplicant.cpp |  33 +++++++-
 wpa_supplicant/main.c                  | 100 ++++++++++++++++++++++++-
 4 files changed, 132 insertions(+), 6 deletions(-)
 mode change 100644 => 100755 src/common/wpa_common.h
 mode change 100644 => 100755 wpa_supplicant/Android.mk
 mode change 100644 => 100755 wpa_supplicant/hidl/1.3/supplicant.cpp
 mode change 100644 => 100755 wpa_supplicant/main.c

diff --git a/src/common/wpa_common.h b/src/common/wpa_common.h
old mode 100644
new mode 100755
index c0ef689c..559c8dbc
--- a/src/common/wpa_common.h
+++ b/src/common/wpa_common.h
@@ -584,4 +584,7 @@ int wpa_use_cmac(int akmp);
 int wpa_use_aes_key_wrap(int akmp);
 int fils_domain_name_hash(const char *domain, u8 *hash);
 
+static char wifi_type[64] = {0};
+extern int check_wifi_chip_type_string(char *type);
+
 #endif /* WPA_COMMON_H */
diff --git a/wpa_supplicant/Android.mk b/wpa_supplicant/Android.mk
old mode 100644
new mode 100755
index 37432d9a..2df1307b
--- a/wpa_supplicant/Android.mk
+++ b/wpa_supplicant/Android.mk
@@ -1720,7 +1720,7 @@ endif
 ifneq ($(BOARD_WPA_SUPPLICANT_PRIVATE_LIB),)
 LOCAL_STATIC_LIBRARIES += $(BOARD_WPA_SUPPLICANT_PRIVATE_LIB)
 endif
-LOCAL_SHARED_LIBRARIES := libc libcutils liblog
+LOCAL_SHARED_LIBRARIES := libc libcutils liblog librkwifi-ctrl
 ifdef CONFIG_EAP_PROXY
 LOCAL_STATIC_LIBRARIES += $(LIB_STATIC_EAP_PROXY)
 LOCAL_SHARED_LIBRARIES += $(LIB_SHARED_EAP_PROXY)
diff --git a/wpa_supplicant/hidl/1.3/supplicant.cpp b/wpa_supplicant/hidl/1.3/supplicant.cpp
old mode 100644
new mode 100755
index 50d23436..197b3306
--- a/wpa_supplicant/hidl/1.3/supplicant.cpp
+++ b/wpa_supplicant/hidl/1.3/supplicant.cpp
@@ -24,10 +24,14 @@ constexpr char kStaIfaceConfPath[] =
     "/data/vendor/wifi/wpa/wpa_supplicant.conf";
 constexpr char kStaIfaceConfOverlayPath[] =
     "/vendor/etc/wifi/wpa_supplicant_overlay.conf";
+constexpr char kRtkStaIfaceConfOverlayPath[] =
+    "/vendor/etc/wifi/wpa_supplicant_rtk.conf";
 constexpr char kP2pIfaceConfPath[] =
     "/data/vendor/wifi/wpa/p2p_supplicant.conf";
 constexpr char kP2pIfaceConfOverlayPath[] =
     "/vendor/etc/wifi/p2p_supplicant_overlay.conf";
+constexpr char kRtkP2pIfaceConfOverlayPath[] =
+    "/vendor/etc/wifi/p2p_supplicant_rtk.conf";
 // Migrate conf files for existing devices.
 constexpr char kSystemTemplateConfPath[] =
     "/system/etc/wifi/wpa_supplicant.conf";
@@ -37,6 +41,9 @@ constexpr char kOldStaIfaceConfPath[] = "/data/misc/wifi/wpa_supplicant.conf";
 constexpr char kOldP2pIfaceConfPath[] = "/data/misc/wifi/p2p_supplicant.conf";
 constexpr mode_t kConfigFileMode = S_IRUSR | S_IWUSR | S_IRGRP | S_IWGRP;
 
+static char wpa_conf_overlay_path[64];
+static char p2p_conf_overlay_path[64];
+
 int copyFile(
     const std::string& src_file_path, const std::string& dest_file_path)
 {
@@ -284,9 +291,19 @@ Supplicant::addInterfaceInternal(const IfaceInfo& iface_info)
 				{}};
 		}
 		iface_params.confname = kP2pIfaceConfPath;
-		int ret = access(kP2pIfaceConfOverlayPath, R_OK);
+		if (wifi_type[0] == 0) {
+			check_wifi_chip_type_string(wifi_type);
+		}
+		if (0 == strncmp(wifi_type, "RTL", 3)) {
+			strcpy(p2p_conf_overlay_path, kRtkP2pIfaceConfOverlayPath);
+		} else {
+			strcpy(p2p_conf_overlay_path, kP2pIfaceConfOverlayPath);
+		}
+		int ret = access(p2p_conf_overlay_path, R_OK);
+		wpa_printf(MSG_INFO, "Use %s, read %s.\n", p2p_conf_overlay_path,
+			   (ret == 0) ? "ok" : "fail");
 		if (ret == 0) {
-			iface_params.confanother = kP2pIfaceConfOverlayPath;
+			iface_params.confanother = p2p_conf_overlay_path;
 		}
 	} else {
 		if (ensureConfigFileExists(
@@ -299,9 +316,19 @@ Supplicant::addInterfaceInternal(const IfaceInfo& iface_info)
 				{}};
 		}
 		iface_params.confname = kStaIfaceConfPath;
+		if (wifi_type[0] == 0) {
+			check_wifi_chip_type_string(wifi_type);
+		}
+		if (0 == strncmp(wifi_type, "RTL", 3)) {
+			strcpy(wpa_conf_overlay_path, kRtkStaIfaceConfOverlayPath);
+		} else {
+			strcpy(wpa_conf_overlay_path, kStaIfaceConfOverlayPath);
+		}
 		int ret = access(kStaIfaceConfOverlayPath, R_OK);
+		wpa_printf(MSG_INFO, "Use %s, read %s.\n", wpa_conf_overlay_path,
+			   (ret == 0) ? "ok" : "fail");
 		if (ret == 0) {
-			iface_params.confanother = kStaIfaceConfOverlayPath;
+			iface_params.confanother = wpa_conf_overlay_path;
 		}
 	}
 	iface_params.ifname = iface_info.name.c_str();
diff --git a/wpa_supplicant/main.c b/wpa_supplicant/main.c
old mode 100644
new mode 100755
index 51a8a029..04ba5b13
--- a/wpa_supplicant/main.c
+++ b/wpa_supplicant/main.c
@@ -178,7 +178,7 @@ static int wpa_supplicant_init_match(struct wpa_global *global)
 #endif /* CONFIG_MATCH_IFACE */
 
 
-int main(int argc, char *argv[])
+int main_loop(int argc, char *argv[])
 {
 	int c, i;
 	struct wpa_interface *ifaces, *iface;
@@ -190,7 +190,7 @@ int main(int argc, char *argv[])
 		return -1;
 
 	os_memset(&params, 0, sizeof(params));
-	params.wpa_debug_level = MSG_INFO;
+	params.wpa_debug_level = MSG_DEBUG;
 
 	iface = ifaces = os_zalloc(sizeof(struct wpa_interface));
 	if (ifaces == NULL)
@@ -407,3 +407,99 @@ out:
 
 	return exitcode;
 }
+
+#define BROADCOM_MODULE_NAME "[broadcom]"
+#define REALTEK_MODULE_NAME "[realtek]"
+#define SSV_MODULE_NAME "[ssv]"
+#define ESP_MODULE_NAME "[esp]"
+#define SPRDWL_MODULE_NAME "[sprdwl]"
+
+int read_wpa_param_config(char *module_name, char *file_path) {
+	char *wpa_param[50] = {0};
+	char wpa_param_buf[50][50];
+	int wpa_param_len = 0;
+	char buf[256] = {0};
+	FILE *fp = NULL;
+	char *pos;
+	int ret = -1;
+	int found = 0;
+	int i;
+	fp = fopen(file_path, "r");
+	wpa_printf(MSG_INFO,"module_name = %s\n",module_name);
+	if (fp == NULL) {
+		wpa_printf(MSG_ERROR,"%s not found\n",file_path);
+		return -1;
+	}
+	while(fgets(buf, sizeof(buf) -1, fp)) {
+		pos = buf;
+		while (*pos != '\0') {
+			if (*pos == '\n' || *pos == ' ') {
+				*pos = '\0';
+				break;
+			}
+			pos++;
+		}
+		if(found == 0) {
+			if(strstr(buf,module_name)) {
+				found = 1;
+				wpa_printf(MSG_INFO,"found %s\n",module_name);
+			}
+			continue;
+		}
+		if(buf[0] == '\n' || buf[0] == '\0'|| buf[0] == '#' || buf[0] == ' ' || buf[0] == '[') {
+			wpa_printf(MSG_INFO,"wpa_param_len = %d\n",wpa_param_len);
+			break;
+		}
+		strcpy(wpa_param_buf[wpa_param_len],buf);
+		wpa_param_len++;
+	}
+	fclose(fp);
+	for(i = 0; i < wpa_param_len; i++) {
+		wpa_param[i] = wpa_param_buf[i];
+		wpa_printf(MSG_INFO,"wpa_param_len = %d | wpa_param[%d] = %s\n",wpa_param_len,i,wpa_param[i]);
+	}
+	if(wpa_param_len > 0)
+		ret = main_loop(wpa_param_len,wpa_param);
+	else
+		wpa_printf(MSG_ERROR,"%s not found\n",module_name);
+	return ret;
+}
+
+int main(int argc, char *argv[])
+{
+	int ret = -1;
+	char module_type[20]={0};
+
+	wpa_printf(MSG_INFO,"argc = %d\n",argc);
+	if(argc == 2) {
+		if (wifi_type[0] == 0) {
+			check_wifi_chip_type_string(wifi_type);
+		}
+		wpa_printf(MSG_INFO,"Current wifi chip is %s\n",wifi_type);
+		if (0 == strncmp(wifi_type, "RTL", 3)) {
+			wpa_printf(MSG_INFO,"Start rtl_wpa_supplicant\n");
+			ret = read_wpa_param_config(REALTEK_MODULE_NAME,argv[1]);
+		} else if (0 == strncmp(wifi_type, "AP", 2)) {
+			wpa_printf(MSG_INFO,"Start bcm_wpa_supplicant\n");
+			ret = read_wpa_param_config(BROADCOM_MODULE_NAME,argv[1]);
+		} else if (0 == strncmp(wifi_type, "SSV", 3) ||
+			   0 == strncmp(wifi_type, "RK912", 5)) {
+			wpa_printf(MSG_INFO,"Start ssv_wpa_supplicant\n");
+			ret = read_wpa_param_config(SSV_MODULE_NAME,argv[1]);
+		} else if (0 == strncmp(wifi_type, "ESP", 3)) {
+			wpa_printf(MSG_INFO,"Start esp_wpa_supplicant\n");
+			ret = read_wpa_param_config(ESP_MODULE_NAME,argv[1]);
+		} else if (0 == strncmp(wifi_type, "SPRDWL", 6)) {
+			wpa_printf(MSG_INFO,"Start sprdwl_wpa_supplicant\n");
+			ret = read_wpa_param_config(SPRDWL_MODULE_NAME,argv[1]);
+		} else {
+			wpa_printf(MSG_INFO,"Start wpa_supplicant\n");
+			sprintf(module_type,"[%s]",wifi_type);
+			ret = read_wpa_param_config(module_type,argv[1]);
+		}
+	} else {
+		wpa_printf(MSG_INFO,"Start wpa_supplicant\n");
+		ret = main_loop(argc, argv);
+	}
+	return ret;
+}
-- 
2.35.1

